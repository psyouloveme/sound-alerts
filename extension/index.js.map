{"mappings":"AAeAA,OAAAC,QAAiB,SAAUC,GAC1BA,EAAOC,IAAIC,MAAM,+BACUF,EAAOG,UAAmB,uBAAwB,CAC5EC,cAAc,IADf,MAGMC,EAAgBL,EAAOG,UAAyB,kBAAmB,CACxEC,aAAc,CAAC,IAGVE,EAAYN,EAAOG,UAAqB,aAC9C,GAAIG,EAAUC,OAASD,EAAUC,MAAMC,OAAS,EAC/C,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAUC,MAAMC,OAAQC,IAAK,CAChD,IAAIC,EAAMJ,EAAUC,MAAME,GAC1BT,EAAOC,IAAIU,KAAK,SAAUD,GAC1BV,EAAOC,IAAIU,KAAK,iBAAkBD,EAAIE,aACtCZ,EAAOC,IAAIU,KAAK,UAAWD,EAAIG,KAChC,CAkBDb,EAAOc,UAAU,cAAc,CAACC,EAAiBC,KAChDhB,EAAOC,IAAIU,KAAK,iBAAkBI,GAC9BA,IACCA,KAAWV,EAAcE,MAC5BF,EAAcE,MAAMQ,IAAY,EAEhCV,EAAcE,MAAMQ,GAAW,EAEhCf,EAAOC,IAAIU,KAAK,4BAA6BI,EAASV,EAAcE,MAAMQ,KAGvEC,IAAQA,EAAIC,SACfD,EAAI,KAAI,GAGX","sources":["src/extension/index.ts"],"sourcesContent":["import { NodeCG } from \"nodecg-types/types/server\";\n\nfunction onChatReceived({ user = \"\", message = \"\" }) {\n\tif (!user || !message || !message.startsWith(\"!\")) {\n\t  return;\n\t}\n\n\tconst splitAlert = message.split(\" \")[0];\n\tif (splitAlert && nodecg.findCue(splitAlert)) {\n\t  nodecg.playSound(splitAlert);\n\t  nodecg.sendMessage(\"played-cue\", splitAlert);\n\t}\n};\n\n\nmodule.exports = function (nodecg : NodeCG) {\n\tnodecg.log.debug('Soundalerts bundle started.');\n\tconst audioAlertsEnabled = nodecg.Replicant<boolean>('audio_alerts_enabled', {\n\t\tdefaultValue: false\n\t});\n\tconst audioAlertLog = nodecg.Replicant<AudioAlertLog>('audio-alert-log', {\n\t\tdefaultValue: {}\n\t});\n\n\tconst soundCues = nodecg.Replicant<CueAssets>(\"soundCues\");\n\tif (soundCues.value && soundCues.value.length > 0) {\n\t\tfor (let c = 0; c < soundCues.value.length; c++) {\n\t\t\tlet cue = soundCues.value[c];\n\t\t\tnodecg.log.info(\"cue is\", cue);\n\t\t\tnodecg.log.info(\"defaultFile is\", cue.defaultFile);\n\t\t\tnodecg.log.info(\"file is\", cue.file);\n\t\t}\n\t}\n\t\n\t\n\t/*\n\tnodecg.listenFor(\"ChatReceived\", \"twitch-listener\", ({ user = \"\", message = \"\" }) => {\n\t\tif (!user || !message || !message.startsWith(\"!\")) {\n\t\t  return;\n\t\t}\n\t\t\n\t\tconst splitAlert = message.split(\" \")[0];\n\t\tif (splitAlert && nodecg.findCue(splitAlert)) {\n\t\t  nodecg.playSound(splitAlert);\n\t\t  nodecg.sendMessage(\"played-cue\", splitAlert);\n\t\t}\n\t});\n\t*/\n\n\tnodecg.listenFor('played-cue', (cueName: string, ack) => {\n\t\tnodecg.log.info(\"played cue: %s\", cueName);\n\t\tif (cueName) {\n\t\t\tif (cueName in audioAlertLog.value) {\n\t\t\t\taudioAlertLog.value[cueName] += 1;\n\t\t\t} else {\n\t\t\t\taudioAlertLog.value[cueName] = 1;\n\t\t\t}\n\t\t\tnodecg.log.info(\"cue %s is now at %s plays\", cueName, audioAlertLog.value[cueName]);\n\t\t}\n\n\t\tif (ack && !ack.handled) {\n\t\t\tack(null);\n\t\t}\n\t});\n};\n"],"names":["module","exports","nodecg1","log","debug","Replicant","defaultValue","audioAlertLog","soundCues","value","length","c","cue","info","defaultFile","file","listenFor","cueName","ack","handled"],"version":3,"file":"index.js.map","sourceRoot":"../"}