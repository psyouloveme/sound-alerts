{"mappings":"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","sources":["src/dashboard/settings/HtmlHelpers.ts","src/types/SoundAlertReplicants.d.ts","src/types/ReplicantEvents.d.ts","src/dashboard/settings/types.d.ts","src/dashboard/settings/index.ts"],"sourcesContent":["function buildDiv(id?: string, classes?: string[]) {\n    const div = document.createElement(\"div\") as HTMLDivElement;\n    if (classes && classes.length > 0){\n        div.classList.add(...classes);\n    }\n    if (id) {\n        div.id = id;\n    }\n    return div;\n}\n\nfunction buildHiddenInput(name: string, value: string) {\n    const input = document.createElement(\"input\") as HTMLInputElement;\n    input.type = \"hidden\";\n    input.name = name;\n    input.value = value;\n    return input;\n}\n\nfunction buildButton(name : string, text: string, classes?: string[], ) {\n    const button = document.createElement(\"button\") as HTMLButtonElement;\n    if (classes && classes.length > 0){\n        button.classList.add(...classes);\n    }\n    button.name = name;\n    button.innerText = text;\n    return button;\n}\n\nfunction buildLabel(forName: string, text: string, classes?: string[]) {\n    const label = document.createElement(\"label\") as HTMLLabelElement;\n    if (classes && classes.length > 0){\n        label.classList.add(...classes);\n    }\n    label.htmlFor = forName;\n    label.innerText = text;\n    return label;\n}\n\nfunction buildSpan(text: string, classes?: string[]) {\n    const span = document.createElement(\"span\") as HTMLSpanElement;\n    if (classes && classes.length > 0){\n        span.classList.add(...classes);\n    }\n    span.innerText = text;\n    return span;\n}\n\nfunction buildTextInput(name: string, value: string, classes?: string[]) {\n    const input = document.createElement(\"input\") as HTMLInputElement;\n    if (classes && classes.length > 0){\n        input.classList.add(...classes);\n    }\n    input.type = \"text\";\n    input.name = name;\n    input.value = value;\n    return input;\n}\n\nfunction buildNumberInput(name: string, value: string, classes?: string[]) {\n    const input = document.createElement(\"input\") as HTMLInputElement;\n    if (classes && classes.length > 0){\n        input.classList.add(...classes);\n    }\n    input.type = \"number\";\n    input.name = name;\n    input.value = value;\n    return input;\n}\n\nexport type SelectInputDataElem = {\n    label: string;\n    value: string;\n    selected: boolean;\n}\n\nfunction buildSelect(classes : string[], name: string, options: SelectInputDataElem[]){\n    const select = document.createElement(\"select\") as HTMLSelectElement;\n    if (classes && classes.length > 0){\n       select.classList.add(...classes);\n    }\n    select.name = name;\n    options.forEach((opt) => {\n        const o = document.createElement(\"option\") as HTMLOptionElement;\n        o.value = opt.value;\n        o.innerText = opt.label;\n        o.selected = opt.selected;\n        select.add(o);\n    })\n    return select;\n}\n\nfunction buildForm(name: string | null, id: string | null, classes: CSSClasses[]) {\n    const form = document.createElement(\"form\") as HTMLFormElement;\n    if (name) {\n        form.name = name;\n    }\n    if (id) {\n        form.id = id;\n    }\n    if (classes && classes.length > 0) {\n        form.classList.add(...classes);\n    }\n    return form;\n}\n\n\nexport default {\n    buildButton,\n    buildLabel,\n    buildTextInput,\n    buildSelect,\n    buildHiddenInput,\n    buildSpan,\n    buildDiv,\n    buildNumberInput,\n    buildForm\n}","export enum SoundAlertReplicants {\n    soundCueConfig = \"soundCueConfig\",\n    soundCuesEnabled = \"soundCuesEnabled\",\n    soundCueList = \"soundCueList\",\n    soundCueLog = \"soundCueLog\",\n    soundCueTypes = \"soundCueTypes\",\n    nodeCGServerSoundCues = \"soundCues\", // this is for the extension to get the defined cues\n}\n\nexport type SoundCueNameList = string[];\n","enum ReplicantEvents {\n    change = \"change\"\n}\n\nexport default ReplicantEvents","\nexport enum CSSClasses {\n    commandFormRow = \"commandFormRow\",\n    btnRemove = \"btnRemove\",\n    btnAdd = \"btnAdd\",\n    formGroup = \"formGroup\",\n    middle = \"middle\",\n    btnToggleEnabled = \"btnToggleEnabled\",\n    enabled = \"enabled\",\n    readOnly = \"readOnly\",\n    hidden = \"hidden\",\n    cueSelectWrapper = \"cueSelectWrapper\"\n};\n\nexport enum ElementIDs {\n    cueConfigPanel = \"cueConfigPanel\"\n};\n\nexport type ConfigFormState = {\n    editingRows: number[],\n    submittingRows: number[],\n    rowErrors: Record<number, string>,\n    rendered: boolean,\n    commandTypeOptions: SoundCommandType[]\n}","import HtmlHelpers, { SelectInputDataElem } from \"./HtmlHelpers\";\nimport { SoundAlertReplicants, SoundCueNameList } from \"../../types/SoundAlertReplicants.d\";\nimport SoundCommandType from \"../../types/SoundCommandType.d\";\nimport ReplicantEvents from \"../../types/ReplicantEvents.d\";\nimport { ElementIDs, CSSClasses, ConfigFormState } from \"./types.d\";\n\nconst CommandConfig = nodecg.Replicant<SoundCommandList>(SoundAlertReplicants.soundCueConfig);\nconst CommandTypes = nodecg.Replicant<SoundCommandType[]>(SoundAlertReplicants.soundCueTypes);\nconst SoundCues = nodecg.Replicant<SoundCueNameList>(SoundAlertReplicants.soundCueList);\n\nconst CommandFormState : ConfigFormState = {\n    editingRows: [],\n    submittingRows: [],\n    rowErrors: {},\n    rendered: false,\n    commandTypeOptions: [],\n}\n\n/**\n * Mouse click event for the enable/disable button.\n * Apply changes to config instantly.\n * @param e button click event\n */\nfunction onEnableButtonClicked(e: MouseEvent) {\n    e.preventDefault();\n    if (!CommandConfig || !CommandConfig.value) {\n        console.error(\"Failed enabling/disabling sound alert - replicant not available.\");\n        return;\n    }\n    if (!e.target) {\n        console.error(\"Failed enabling/disabling sound alert - no event target found.\")\n        return;\n    }\n    const target = e.target as HTMLButtonElement;\n    if (!target.dataset.cmdName) {\n        console.error(\"Failed enabling/disabling sound alert - command name found.\")\n        return;\n    }\n\n\n    const cmdName = target.dataset.cmdName;\n    const foundCommand = CommandConfig.value.find((c) => c.commandName === cmdName);\n    if (!foundCommand) {\n        console.error(`Failed enabling/disabling sound alert - command found for \"${cmdName}\" not found.`)\n        return;\n    }\n    \n    // check the target's dataset prop.\n    const enabled = (target.dataset.enabled === \"true\");    \n    \n    // this will trigger a re-render\n    foundCommand.enabled = !enabled;\n}\n\nfunction buildEnableButton(enabled: boolean, commandName: string) {\n    let txt = enabled ? 'On' : \"Off\";\n    const btn = HtmlHelpers.buildButton(\"btnEnabled\", txt, [CSSClasses.btnToggleEnabled]);\n    if (enabled) {\n        btn.classList.add(CSSClasses.enabled);\n    }\n    btn.onclick = onEnableButtonClicked;\n    btn.dataset.cmdName = commandName;\n    btn.dataset.enabled = enabled.toString();\n    return btn;\n}\n\nfunction buildFormGroup(extraClasses?: CSSClasses[]) {\n    let classes = [ CSSClasses.formGroup, ]\n    if (extraClasses) {\n        classes = classes.concat(extraClasses)\n    }\n    const elem = HtmlHelpers.buildDiv(undefined, classes);\n    return elem;\n}\n\nfunction btnRemoveClick(e: MouseEvent) {\n    e.preventDefault();\n    if (!CommandConfig || !CommandConfig.value) {\n        console.error(\"Failed removing command - replicant not available.\");\n        return;\n    }\n    if (!e.target) {\n        console.error(\"Failed removing command - no event target found.\")\n        return;\n    }\n    const target = e.target as HTMLButtonElement;\n    if (!target.dataset.cmdName) {\n        console.error(\"Failed removing command - command name found.\")\n        return;\n    }\n}\n\n\nfunction mapCommandToForm(cmd: SoundCommand, index: number) { \n    if (!CommandTypes || !CommandTypes.value) {\n        throw Error(\"Unable to map command rows - no command types are loaded.\");\n    }\n\n    if (!SoundCues || !SoundCues.value) {\n        throw Error(\"Unable to map command rows - no sound cues are loaded.\");\n    }\n\n    const rowClasses = [ CSSClasses.commandFormRow, ];\n\n    const rowDiv = HtmlHelpers.buildForm(`commandForm[]`, null, []);\n    const newFormRow = HtmlHelpers.buildDiv(`cmd-row-${cmd.commandName}`, rowClasses);\n    newFormRow.dataset.commandName = cmd.commandName;\n    \n\n    // enable/disable button\n    let fg = buildFormGroup([CSSClasses.middle]);\n    let btn = buildEnableButton(cmd.enabled, cmd.commandName);\n    fg.appendChild(btn);\n    newFormRow.appendChild(fg)\n\n\n    const hiddenClasses = [CSSClasses.hidden];\n\n    fg = buildFormGroup();\n    let label = HtmlHelpers.buildLabel(\"commandName\", \"Name\");\n    let input = HtmlHelpers.buildTextInput(\"commandName\", cmd.commandName, hiddenClasses);\n    let span = HtmlHelpers.buildSpan(cmd.commandName);\n    fg.append(label, input, span);\n    newFormRow.appendChild(fg)\n\n    fg = buildFormGroup();\n    label = HtmlHelpers.buildLabel(\"coolDownMs\", \"Cooldown\");\n    let cooldownValue = cmd.coolDownMs ? cmd.coolDownMs.toString() : \"0\";\n    let cooldownText = cmd.coolDownMs ? `${cmd.coolDownMs} ms` : \"None\";\n    input = HtmlHelpers.buildNumberInput(\"coolDownMs\", cooldownValue, hiddenClasses)\n    span = HtmlHelpers.buildSpan(cooldownText);\n    fg.append(label, input, span);\n    newFormRow.appendChild(fg)\n\n    \n    const commandTypeOptions = CommandTypes.value.map((val) => ({\n        label: val,\n        value: val,\n        selected: cmd.commandType === val,\n    })) as SelectInputDataElem[];\n    fg = buildFormGroup();\n    label = HtmlHelpers.buildLabel(\"commandType\", \"Type\");\n    let select = HtmlHelpers.buildSelect(hiddenClasses, \"commandType\", commandTypeOptions)\n    span = HtmlHelpers.buildSpan(cmd.commandType);\n    fg.append(label, select, span);\n    newFormRow.appendChild(fg)\n\n    fg = buildFormGroup();\n    label = HtmlHelpers.buildLabel(\"mappedCues\", \"Cues\");\n    fg.append(label);\n\n    const hasMappedCue = (cmd.mappedCues.length > 0);\n    const mappedCues: SelectInputDataElem[] = [];\n    mappedCues.push({\n        label: \"Select one\",\n        value: \"-1\",\n        selected: (!hasMappedCue)\n    })\n    // for (let g = 0; g < SoundCues.value.length; g++) {\n    //     const v = SoundCues.value[g];\n    //     mappedCues.push({\n    //         label: v,\n    //         value: v,\n    //         selected: false\n    //     });\n    // }\n\n    if (cmd.mappedCues.length === 0) {\n        span = HtmlHelpers.buildSpan(\"None\");\n        const innerDiv = HtmlHelpers.buildDiv(undefined, [CSSClasses.cueSelectWrapper])\n        \n        const cueListCopy = mappedCues.map((a) => ({ ...a }));\n        select = HtmlHelpers.buildSelect(hiddenClasses, `mappedCues[]`, cueListCopy); \n        innerDiv.appendChild(select);\n\n        fg.appendChild(innerDiv);\n    } else {\n        span = HtmlHelpers.buildSpan(cmd.mappedCues.join(\", \"));\n\n        for (let i = 0; i < cmd.mappedCues.length; i++) {\n            const innerDiv = HtmlHelpers.buildDiv(undefined, [CSSClasses.cueSelectWrapper])\n            const mc = cmd.mappedCues[i];\n            const cueListCopy = mappedCues.map((a) => {\n                return {\n                    ...a,\n                    selected : mc === a.value\n                }\n            })\n            select = HtmlHelpers.buildSelect(hiddenClasses, `mappedCues[]`, cueListCopy); \n            fg.appendChild(select);\n            if (i > 0) {\n                btn = HtmlHelpers.buildButton(\"\", \"-\", [CSSClasses.btnRemove, CSSClasses.hidden]);\n                innerDiv.appendChild(btn);\n            }\n            fg.appendChild(innerDiv);\n        }\n    }\n    fg.appendChild(span);\n    btn = HtmlHelpers.buildButton(\"\",\"+\",[CSSClasses.btnAdd, CSSClasses.hidden]);\n    fg.appendChild(btn);\n    newFormRow.appendChild(fg);\n\n    fg = buildFormGroup([CSSClasses.middle, CSSClasses.hidden])\n    btn = HtmlHelpers.buildButton(\"\",\"Save\", [CSSClasses.btnAdd]);\n    fg.appendChild(btn);\n    newFormRow.appendChild(fg);\n\n    fg = buildFormGroup([CSSClasses.middle]);\n    btn = HtmlHelpers.buildButton(\"\",\"Edit\", []);\n    fg.appendChild(btn);\n    newFormRow.appendChild(fg);\n\n    rowDiv.appendChild(newFormRow);\n    return rowDiv;\n}\n\nfunction initializeSoundCueForms(config : SoundCommandList) {\n    const mapPanel = document.getElementById(ElementIDs.cueConfigPanel);\n    if (!mapPanel) {\n        console.error(\"Unable to locate panel, skipping form initialization.\")\n        return;\n    }\n    const rows = config.map(mapCommandToForm);\n    mapPanel.append(...rows);\n}\n\nfunction updateSoundCueForms(newConfig : SoundCommandList, oldConfig: SoundCommandList) {\n    const mapPanel = document.getElementById(ElementIDs.cueConfigPanel);\n    if (!mapPanel) {\n        console.error(\"Unable to locate panel, skipping form update.\")\n        return;\n    }\n}\n\nfunction teardownSoundCueForms() {\n    const mapPanel = document.getElementById(ElementIDs.cueConfigPanel);\n    if (!mapPanel) {\n        console.error(\"Unable to locate panel, skipping form teardown.\")\n        return;\n    }\n}\n\nfunction onSoundCommandConfigChange(newConfig: SoundCommandList, oldConfig: SoundCommandList) {\n    if (!Array.isArray(newConfig))  {\n        console.error(\"No config was provided, skipping form render.\")\n        return;\n    }\n\n    if (newConfig && !oldConfig) {\n        // create from scratch\n        initializeSoundCueForms(newConfig);\n    } else if (newConfig && oldConfig) {\n        // update the dom\n        updateSoundCueForms(newConfig, oldConfig);\n    } else if (!newConfig && oldConfig) {\n        // tear down the forms\n        teardownSoundCueForms();\n    }\n};\n\n\nfunction setupSoundCueConfigForm(){\n    NodeCG.waitForReplicants(CommandConfig, CommandTypes, SoundCues)\n    .then(() => {\n        CommandConfig.on(ReplicantEvents.change, onSoundCommandConfigChange);\n    });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", setupSoundCueConfigForm);"],"names":["$c9667c13806cac9b$export$2e2bcd8739ae039","name","text","classes","button","document","createElement","length","classList","add","innerText","forName","label","htmlFor","value","input","type","options","select","forEach","opt","o","selected","span","id","div","form","$9f616eee726af400$export$501f6df0ab3ca018","SoundAlertReplicants","$ad119dc852be40ec$var$ReplicantEvents","$ad119dc852be40ec$export$2e2bcd8739ae039","$14bce57df13bef4b$export$1112fe37bc980be0","CSSClasses","$14bce57df13bef4b$export$d0ba48f9ed05b63c","$8fd10160d14e935e$var$CommandConfig","nodecg","Replicant","soundCueConfig","$8fd10160d14e935e$var$CommandTypes","soundCueTypes","$8fd10160d14e935e$var$SoundCues","soundCueList","$8fd10160d14e935e$var$onEnableButtonClicked","e","preventDefault","console","error","target","dataset","cmdName","foundCommand","find","c","commandName","enabled","$8fd10160d14e935e$var$buildFormGroup","extraClasses","formGroup","concat","buildDiv","undefined","$8fd10160d14e935e$var$mapCommandToForm","cmd","index","Error","rowClasses","commandFormRow","rowDiv","buildForm","newFormRow","fg","middle","btn","txt","buildButton","btnToggleEnabled","onclick","toString","$8fd10160d14e935e$var$buildEnableButton","appendChild","hiddenClasses","hidden","buildLabel","buildTextInput","buildSpan","append","cooldownValue","coolDownMs","cooldownText","buildNumberInput","commandTypeOptions","map","val","commandType","buildSelect","hasMappedCue","mappedCues","push","innerDiv","cueSelectWrapper","cueListCopy","a","join","i","mc","btnRemove","btnAdd","$8fd10160d14e935e$var$onSoundCommandConfigChange","newConfig","oldConfig","Array","isArray","config","mapPanel","getElementById","cueConfigPanel","rows","$8fd10160d14e935e$var$initializeSoundCueForms","addEventListener","NodeCG","waitForReplicants","then","on","change"],"version":3,"file":"index.cdbcf14b.js.map"}