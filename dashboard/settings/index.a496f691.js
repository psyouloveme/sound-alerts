var e={buildButton:function(e,n,t){const l=document.createElement("button");return null!=t&&t.length>0&&l.classList.add(...t),l.name=e,l.innerText=n,l},buildLabel:function(e,n,t){const l=document.createElement("label");return null!=t&&t.length>0&&l.classList.add(...t),l.htmlFor=e,l.innerText=n,l},buildTextInput:function(e,n,t){const l=document.createElement("input");return null!=t&&t.length>0&&l.classList.add(...t),l.type="text",l.name=e,l.value=n,l},buildSelect:function(e,n,t){const l=document.createElement("select");return null!=e&&e.length>0&&l.classList.add(...e),l.name=n,t.forEach((e=>{const n=document.createElement("option");n.value=e.value,n.innerText=e.label,n.selected=e.selected,l.add(n)})),l},buildHiddenInput:function(e,n){const t=document.createElement("input");return t.type="hidden",t.name=e,t.value=n,t},buildSpan:function(e,n){const t=document.createElement("span");return null!=n&&n.length>0&&t.classList.add(...n),t.innerText=e,t},buildDiv:function(e,n){const t=document.createElement("div");return null!=n&&n.length>0&&t.classList.add(...n),null!=e&&(t.id=e),t},buildNumberInput:function(e,n,t){const l=document.createElement("input");return null!=t&&t.length>0&&l.classList.add(...t),l.type="number",l.name=e,l.value=n,l},buildForm:function(e,n,t){const l=document.createElement("form");return null!=e&&(l.name=e),null!=n&&(l.id=n),null!=t&&t.length>0&&l.classList.add(...t),l}};let n;var t;let l;(t=n||(n={})).soundCueConfig="soundCueConfig",t.soundCuesEnabled="soundCuesEnabled",t.soundCueList="soundCueList",t.soundCueLog="soundCueLog",t.soundCueTypes="soundCueTypes",t.soundCueCommandIndex="soundCueCommandIndex",t.nodeCGServerSoundCues="soundCues",(l||(l={})).change="change";var o=l;let a;var d;let u;(d=a||(a={})).commandFormRow="commandFormRow",d.btnRemove="btnRemove",d.btnAdd="btnAdd",d.formGroup="formGroup",d.middle="middle",d.btnToggleEnabled="btnToggleEnabled",d.enabled="enabled",d.readOnly="readOnly",d.hidden="hidden",d.cueSelectWrapper="cueSelectWrapper",(u||(u={})).cueConfigPanel="cueConfigPanel";const r=nodecg.Replicant(n.soundCueConfig),i=nodecg.Replicant(n.soundCueTypes),c=nodecg.Replicant(n.soundCueList);function s(e){if(null==r?.value)throw Error("Unable to retrieve command config - config replicant not available.");const n=r.value.find((n=>n.id===e));if(null==n)throw Error(`Unable to find command with ID ${e}.`);return{...n}}function m(e){if(null==i?.value)throw Error("Unable to retrieve command types.");return i.value.reduce(((n,t)=>(n.push({label:t,value:t,selected:e===t}),n)),[{label:"Select one",value:"-1",selected:null==e}])}function p(e){if(null==c?.value)throw Error("Sound cue replicant not available.");const n=c.value,t=e.map((e=>function(e,n){let t;if(null!=n)t=n;else{if(null==c?.value)throw Error("Sound cue replicant not available.");t=c.value}return t.reduce(((n,t)=>(n.push({label:t,value:t,selected:e===t}),n)),[{label:"Select one",value:"-1",selected:null==e}])}(e,n)));return t}function f(e){if(e.preventDefault(),null==r?.value)return void console.error("Failed enabling/disabling sound alert - replicant not available.");if(null==e.target)return void console.error("Failed enabling/disabling sound alert - no event target found.");const n=e.target;if(null==n.dataset.cmdName)return void console.error("Failed enabling/disabling sound alert - command name found.");const t=n.dataset.cmdName,l=r.value.find((e=>e.commandName===t));if(null==l)return void console.error(`Failed enabling/disabling sound alert - command matching '${t}' not found.`);const o="true"===n.dataset.enabled;l.enabled=!o}function b(e){const n=e.querySelectorAll(".fieldValue");if(null!=n&&n.length>0)for(let t=0;t<n.length;t++){const l=n[t];e.removeChild(l)}}function g(n){if(n.preventDefault(),null==n.target)return void console.error("Failed sound alert edit - no event target found.");const t=n.target.closest("form");if(null==t)return void console.error("Failed sound alert edit - unable to locate form.");const l=null!=t.dataset.id?parseInt(t.dataset.id):-1;if(l<0)return void console.error("Failed sound alert edit - no ID found.");const o=t.querySelectorAll("div.formGroup");if(o.length<=0)return void console.error("Failed sound alert edit - unable to locate form groups.");const a=s(l),d=["fieldValue"];for(let n=0;n<o.length;n++){const t=o[n];switch(t.dataset.fieldName){case"name":{const n=e.buildSpan(a.commandName,d);b(t),t.appendChild(n);break}case"cooldown":{const n=null!=a.coolDownMs?a.coolDownMs.toString():"0",l=e.buildSpan(n,d);b(t),t.appendChild(l);break}case"type":{const n=e.buildSpan(a.commandType,d);b(t),t.appendChild(n);break}case"cues":{const n=e.buildSpan(a.mappedCues.join(", "),d);b(t),t.append(n);break}case"edit":{const n=e.buildButton("btnEdit","Edit",[]);n.onclick=v,t.replaceChildren(n);break}}}t.dataset.editing="false"}function v(n){if(n.preventDefault(),null==n.target)return void console.error("Failed sound alert edit - no event target found.");const t=n.target.closest("form");if(null==t)return void console.error("Failed sound alert edit - unable to locate form.");t.dataset.editing="true";const l=null!=t.dataset.id?parseInt(t.dataset.id):-1;if(l<0)return void console.error("Failed sound alert edit - no ID found.");const o=t.querySelectorAll("div.formGroup");if(o.length<=0)return void console.error("Failed sound alert edit - unable to locate form groups.");const d=s(l),u=["fieldValue"];for(let n=0;n<o.length;n++){const t=o[n];switch(t.dataset.fieldName){case"name":{const n=e.buildTextInput("commandName",d.commandName,u);b(t),t.appendChild(n);break}case"cooldown":{const n=null!=d.coolDownMs?d.coolDownMs.toString():"0",l=e.buildNumberInput("cooldownMs",n,u);b(t),t.appendChild(l);break}case"type":{const n=m(d.commandType),l=e.buildSelect(u,"commandType",n);b(t),t.appendChild(l);break}case"cues":{const n=p(d.mappedCues).map((n=>e.buildSelect(u,"mappedCues",n)));b(t),t.append(...n);break}case"edit":{const n=e.buildButton("btnSave","Save",[a.btnAdd]),l=e.buildButton("btnCancel","Cancel",[]);l.onclick=g;const o=e.buildButton("btnDelete","Delete",[a.btnRemove]);t.replaceChildren(n,l,o);break}}}}function C(n){let t=[a.formGroup];null!=n&&(t=t.concat(n));return e.buildDiv(void 0,t)}function h(n,t,l,o){const a=C();a.dataset.fieldName=n;const d=e.buildLabel(t,l),u=e.buildSpan(o,["fieldValue"]);return a.append(d,u),a}function y(n,t){if(null==i?.value)throw Error("Unable to map command rows - no command types are loaded.");if(null==c?.value)throw Error("Unable to map command rows - no sound cues are loaded.");console.log(JSON.stringify(n));const l=e.buildForm(`commandForm-${n.id}`,null,[]);l.dataset.id=n.id.toString(),l.dataset.commandName=n.commandName,l.dataset.index=t.toString(),l.dataset.editing="false";const o=e.buildDiv(`cmd-row-${n.commandName}`,[a.commandFormRow]);let d=C([a.middle]);d.dataset.fieldName="enabled";let u=function(n,t){const l=n?"On":"Off",o=e.buildButton("btnEnabled",l,[a.btnToggleEnabled]);return n&&o.classList.add(a.enabled),o.onclick=f,o.dataset.cmdName=t,o.dataset.enabled=n.toString(),o}(n.enabled,n.commandName);d.appendChild(u),o.appendChild(d),d=C([a.middle]),d.dataset.fieldName="id";const r=e.buildSpan(n.id.toString());d.appendChild(r),o.appendChild(d),d=h("name","commandName","Name",n.commandName),o.appendChild(d);d=h("cooldown","coolDownMs","Cooldown",null!=n.coolDownMs?`${n.coolDownMs} ms`:"None"),o.appendChild(d),d=h("type","commandType","Type",n.commandType),o.appendChild(d);return d=h("cues","mappedCues","Cues",n.mappedCues.length<=0?"None":n.mappedCues.join(", ")),o.appendChild(d),d=C([a.middle]),d.dataset.fieldName="edit",u=e.buildButton("","Edit",[]),u.onclick=v,d.appendChild(u),o.appendChild(d),l.appendChild(o),l}function S(e,n){const t=e.querySelector(".fieldValue");null!=t&&("span"===t.tagName?t.innerText=n:("input"===t.tagName||"select"===t.tagName)&&(t.value=n))}function w(n,t){Array.isArray(n)?null!=n&&null==t?function(e){const n=document.getElementById(u.cueConfigPanel);if(null==n)return void console.error("Unable to locate panel, skipping form initialization.");const t=e.map(y);n.append(...t)}(n):null!=n&&null==t?function(n,t){const l=document.getElementById(u.cueConfigPanel);if(null==l)return void console.error("Unable to locate panel, skipping form update.");const o=[];for(let d=0;d<n.length;d++){const u=n[d];o.push(u.id);const r=d<t.length?t[d]:null,i=document.querySelector(`form[data-id='${u.id}']`);if(null!=r){if(r.allCuesAreValid,u.allCuesAreValid,r.lastUseTimestamp,u.lastUseTimestamp,r.commandName!==u.commandName){const e=i.querySelector('div.formGroup[data-field-name="name"]');null!=e&&S(e,u.commandName)}if(r.commandType!==u.commandType){const e=i.querySelector('div.formGroup[data-field-name="type"]');null!=e&&S(e,u.commandType)}if(r.commandUsageCount,u.commandUsageCount,r.coolDownMs!==u.coolDownMs){const e=i.querySelector('div.formGroup[data-field-name="cooldown"]');null!=e&&S(e,null!=u.coolDownMs?u.coolDownMs.toString():"0")}if(r.enabled!==u.enabled){const e=i.querySelector('div.formGroup[data-field-name="enabled"]');if(null!=e){const n=e.querySelector("button");n.dataset.enabled=u.enabled.toString(),u.enabled?(n.innerText="On",n.classList.add(a.enabled)):(n.innerText="Off",n.classList.remove(a.enabled))}}r.orderedMappingIndex,u.orderedMappingIndex,r.id,u.id;const n=r.mappedCues,t=u.mappedCues;if(n.length!==t.length||!t.every(((e,t)=>e===n[t]))){const n=i.querySelector('div.formGroup[data-field-name="cues"]');if(null!=i.dataset.editing){const l=p(t).map((n=>e.buildSelect(["fieldValue"],"mappedCues",n)));b(n),n.append(...l)}else null!=n&&S(n,t.join(", "))}}else{const e=y(u,d);l.append(e)}}}(n,t):null!=n&&null==t&&null==document.getElementById(u.cueConfigPanel)&&console.error("Unable to locate panel, skipping form teardown."):console.error("No config was provided, skipping form render.")}document.addEventListener("DOMContentLoaded",(function(){NodeCG.waitForReplicants(r,i,c).then((()=>{r.on(o.change,w)})).catch((e=>{console.error(e)}))}));
//# sourceMappingURL=index.a496f691.js.map
