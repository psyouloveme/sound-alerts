var e={buildButton:function(e,n,o){const t=document.createElement("button");return null!=o&&o.length>0&&t.classList.add(...o),t.name=e,t.innerText=n,t},buildLabel:function(e,n,o){const t=document.createElement("label");return null!=o&&o.length>0&&t.classList.add(...o),t.htmlFor=e,t.innerText=n,t},buildTextInput:function(e,n,o){const t=document.createElement("input");return null!=o&&o.length>0&&t.classList.add(...o),t.type="text",t.name=e,t.value=n,t},buildSelect:function(e,n,o){const t=document.createElement("select");return null!=e&&e.length>0&&t.classList.add(...e),t.name=n,o.forEach((e=>{const n=document.createElement("option");n.value=e.value,n.innerText=e.label,n.selected=e.selected,t.add(n)})),t},buildHiddenInput:function(e,n){const o=document.createElement("input");return o.type="hidden",o.name=e,o.value=n,o},buildSpan:function(e,n){const o=document.createElement("span");return null!=n&&n.length>0&&o.classList.add(...n),o.innerText=e,o},buildDiv:function(e,n){const o=document.createElement("div");return null!=n&&n.length>0&&o.classList.add(...n),null!=e&&(o.id=e),o},buildNumberInput:function(e,n,o){const t=document.createElement("input");return null!=o&&o.length>0&&t.classList.add(...o),t.type="number",t.name=e,t.value=n,t},buildForm:function(e,n,o){const t=document.createElement("form");return null!=e&&(t.name=e),null!=n&&(t.id=n),null!=o&&o.length>0&&t.classList.add(...o),t}};let n;var o;let t;(o=n||(n={})).soundCueConfig="soundCueConfig",o.soundCuesEnabled="soundCuesEnabled",o.soundCueList="soundCueList",o.soundCueLog="soundCueLog",o.soundCueTypes="soundCueTypes",o.soundCueCommandIndex="soundCueCommandIndex",o.nodeCGServerSoundCues="soundCues",(t||(t={})).change="change";var l=t;let a;var d;let r,u;var i;(d=a||(a={})).commandFormRow="commandFormRow",d.btnRemove="btnRemove",d.btnAdd="btnAdd",d.formGroup="formGroup",d.middle="middle",d.btnToggleEnabled="btnToggleEnabled",d.enabled="enabled",d.readOnly="readOnly",d.hidden="hidden",d.cueSelectWrapper="cueSelectWrapper",(r||(r={})).cueConfigPanel="cueConfigPanel",(i=u||(u={})).id="id",i.name="commandName",i.cooldown="cooldownMs",i.type="commandType",i.cues="mappedCues";const c=nodecg.Replicant(n.soundCueConfig),s=nodecg.Replicant(n.soundCueTypes),m=nodecg.Replicant(n.soundCueList),p=nodecg.Replicant(n.soundCueCommandIndex);function f(e){if(null==c?.value)throw Error("Unable to retrieve command config - config replicant not available.");const n=c.value.find((n=>n.id===e));if(null==n)throw Error(`Unable to find command with ID ${e}.`);return{...n}}function b(e){if(null==s?.value)throw Error("Unable to retrieve command types.");return s.value.reduce(((n,o)=>(n.push({label:o,value:o,selected:e===o}),n)),[{label:"Select one",value:"-1",selected:null==e}])}function g(e){if(null==m?.value)throw Error("Sound cue replicant not available.");const n=m.value,o=e.map((e=>function(e,n){let o;if(null!=n)o=n;else{if(null==m?.value)throw Error("Sound cue replicant not available.");o=m.value}return o.reduce(((n,o)=>(n.push({label:o,value:o,selected:e===o}),n)),[{label:"Select one",value:"-1",selected:null==e}])}(e,n)));return o}function v(e){if(e.preventDefault(),null==c?.value)return void console.error("Failed enabling/disabling sound alert - replicant not available.");if(null==e.target)return void console.error("Failed enabling/disabling sound alert - no event target found.");const n=e.target;if(null==n.dataset.cmdName)return void console.error("Failed enabling/disabling sound alert - command name found.");const o=n.closest("form");if(null==o)return void console.error("Failed sound alert edit - unable to locate form.");const t=o.dataset.id;if(null==t||0===t.length)return void console.error("Failed sound alert edit - unable to locate ID.");const l=parseInt(t);isNaN(l)?console.error("Failed sound alert edit - invalid ID found."):function(e){if(null==c?.value)throw Error("Unable to retrieve command config - config replicant not available.");const n=c.value.find((n=>n.id===e));if(null==n)throw Error(`Unable to find command with ID ${e}.`);n.enabled=!n.enabled}(l)}function C(e){const n=e.querySelectorAll(".fieldValue");if(null!=n&&n.length>0)for(let o=0;o<n.length;o++){const t=n[o];e.removeChild(t)}}function h(n,o){const t=null!=n.dataset.id?parseInt(n.dataset.id):-1;if(t<0)return void console.error("Failed sound alert edit - no ID found.");const l=n.querySelectorAll("div.formGroup");if(l.length<=0)return void console.error("Failed sound alert edit - unable to locate form groups.");const a=null!=o?o:f(t),d=["fieldValue"];for(let n=0;n<l.length;n++){const o=l[n];switch(o.dataset.fieldName){case"name":{const n=e.buildSpan(a.commandName,d);C(o),o.appendChild(n);break}case"cooldown":{const n=null!=a.coolDownMs?a.coolDownMs.toString():"0",t=e.buildSpan(n,d);C(o),o.appendChild(t);break}case"type":{const n=e.buildSpan(a.commandType,d);C(o),o.appendChild(n);break}case"cues":{const n=e.buildSpan(a.mappedCues.join(", "),d);C(o),o.append(n);break}case"edit":{const n=e.buildButton("btnEdit","Edit",[]);n.onclick=S,o.replaceChildren(n);break}}}n.removeEventListener("submit",y),n.dataset.editing="false"}function w(e){if(e.preventDefault(),null==e.target)return void console.error("Failed sound alert edit - no event target found.");const n=e.target.closest("form");null!=n?h(n):console.error("Failed sound alert edit - unable to locate form.")}function y(e){if(e.preventDefault(),null==e.target)return void console.error("Failed saving sound alert - no event target found.");const n=e.target,o=new FormData(n),t=o.get(u.id),l=parseInt(t);if(isNaN(l))return void console.error("Failed saving sound alert - no ID found.");const a=o.get(u.name),d=o.get(u.type),r=o.getAll(u.cues),i=o.get(u.cooldown);let s=parseInt(i);(isNaN(s)||0===s)&&(s=null),console.log("id:",l,"name:",a,"cooldown",i,"type",d,"cues",r);let m=null;if(null==f(l)){if(m=function(e){if(null==c?.value||null==p?.value)throw Error("Unable to insert command config - config replicant not available.");const n={...e,id:++p.value,allCuesAreValid:!0,enabled:!0,lastUseTimestamp:null,orderedMappingIndex:0,commandUsageCount:0};return c.value.push(n),{...n}}({id:-1,commandName:a,commandType:d,mappedCues:r,coolDownMs:s}),null==m)throw new Error(`An error occurred creating sound command ${a}, command not created.`)}else if(m=function(e,n){if(null==c?.value)throw Error("Unable to update command config - config replicant not available.");let o=null;for(let t=0;t<c.value.length;t++)if(c.value[t].id===e){o={...c.value[t],...n},c.value[t]=o;break}return null!=o?{...o}:null}(l,{id:l,commandName:a,commandType:d,mappedCues:r,coolDownMs:s}),null==m)throw new Error(`An error occurred updating sound command ${a}, command not updated.`);n.dataset.commandName=m.commandName,n.dataset.id=m.id.toString(),h(n,m)}function S(n){if(n.preventDefault(),null==n.target)return void console.error("Failed sound alert edit - no event target found.");const o=n.target.closest("form");if(null==o)return void console.error("Failed sound alert edit - unable to locate form.");o.dataset.editing="true",o.addEventListener("submit",y);const t=null!=o.dataset.id?parseInt(o.dataset.id):-1;if(t<0)return void console.error("Failed sound alert edit - no ID found.");const l=o.querySelectorAll("div.formGroup");if(l.length<=0)return void console.error("Failed sound alert edit - unable to locate form groups.");const d=f(t),r=["fieldValue"];for(let n=0;n<l.length;n++){const o=l[n];switch(o.dataset.fieldName){case"name":{const n=e.buildTextInput(u.name,d.commandName,r);C(o),o.appendChild(n);break}case"cooldown":{const n=null!=d.coolDownMs?d.coolDownMs.toString():"0",t=e.buildNumberInput(u.cooldown,n,r);C(o),o.appendChild(t);break}case"type":{const n=b(d.commandType),t=e.buildSelect(r,u.type,n);C(o),o.appendChild(t);break}case"cues":{const n=g(d.mappedCues).map((n=>e.buildSelect(r,u.cues,n)));C(o),o.append(...n);break}case"edit":{const n=e.buildButton("btnSave","Save",[a.btnAdd]),t=e.buildButton("btnCancel","Cancel",[]);t.onclick=w;const l=e.buildButton("btnDelete","Delete",[a.btnRemove]);o.replaceChildren(n,t,l);break}}}}function N(n){let o=[a.formGroup];null!=n&&(o=o.concat(n));return e.buildDiv(void 0,o)}function E(n,o,t,l){const a=N();a.dataset.fieldName=n;const d=e.buildLabel(o,t),r=e.buildSpan(l,["fieldValue"]);return a.append(d,r),a}function D(n,o){if(null==s?.value)throw Error("Unable to map command rows - no command types are loaded.");if(null==m?.value)throw Error("Unable to map command rows - no sound cues are loaded.");console.log(JSON.stringify(n));const t=e.buildForm(`commandForm-${n.id}`,null,[]);t.dataset.id=n.id.toString(),t.dataset.commandName=n.commandName,t.dataset.index=o.toString(),t.dataset.editing="false";const l=e.buildDiv(`cmd-row-${n.id}`,[a.commandFormRow]);let d=N([a.middle]);d.dataset.fieldName="enabled";let r=function(n,o){const t=n?"On":"Off",l=e.buildButton("btnEnabled",t,[a.btnToggleEnabled]);return n&&l.classList.add(a.enabled),l.onclick=v,l.dataset.cmdName=o,l.dataset.enabled=n.toString(),l}(n.enabled,n.commandName);d.appendChild(r),l.appendChild(d),d=N([a.middle]),d.dataset.fieldName="id";const i=e.buildSpan(n.id.toString());d.appendChild(i);const c=e.buildHiddenInput(u.id,n.id.toString());d.appendChild(c),l.appendChild(d),d=E("name","commandName","Name",n.commandName),l.appendChild(d);d=E("cooldown","coolDownMs","Cooldown",null!=n.coolDownMs?`${n.coolDownMs} ms`:"None"),l.appendChild(d),d=E("type","commandType","Type",n.commandType),l.appendChild(d);return d=E("cues","mappedCues","Cues",n.mappedCues.length<=0?"None":n.mappedCues.join(", ")),l.appendChild(d),d=N([a.middle]),d.dataset.fieldName="edit",r=e.buildButton("","Edit",[]),r.onclick=S,d.appendChild(r),l.appendChild(d),t.appendChild(l),t}function T(e,n){const o=e.querySelector(".fieldValue");null!=o&&("span"===o.tagName?o.innerText=n:("input"===o.tagName||"select"===o.tagName)&&(o.value=n))}function I(n,o){Array.isArray(n)?null!=n&&null==o?function(e){const n=document.getElementById(r.cueConfigPanel);if(null==n)return void console.error("Unable to locate panel, skipping form initialization.");const o=e.map(D);n.append(...o)}(n):null!=n&&null!=o?function(n,o){const t=document.getElementById(r.cueConfigPanel);if(null==t)return void console.error("Unable to locate panel, skipping form update.");const l=[];for(let d=0;d<n.length;d++){const r=n[d];l.push(r.id);const u=d<o.length?o[d]:null,i=document.querySelector(`form[data-id='${r.id}']`);if(null!=u){if(u.allCuesAreValid,r.allCuesAreValid,u.lastUseTimestamp,r.lastUseTimestamp,u.commandName!==r.commandName){const e=i.querySelector('div.formGroup[data-field-name="name"]');null!=e&&T(e,r.commandName)}if(u.commandType!==r.commandType){const e=i.querySelector('div.formGroup[data-field-name="type"]');null!=e&&T(e,r.commandType)}if(u.commandUsageCount,r.commandUsageCount,u.coolDownMs!==r.coolDownMs){const e=i.querySelector('div.formGroup[data-field-name="cooldown"]');null!=e&&T(e,null!=r.coolDownMs?r.coolDownMs.toString():"0")}if(u.enabled!==r.enabled){const e=i.querySelector('div.formGroup[data-field-name="enabled"]');if(null!=e){const n=e.querySelector("button");n.dataset.enabled=r.enabled.toString(),r.enabled?(n.innerText="On",n.classList.add(a.enabled)):(n.innerText="Off",n.classList.remove(a.enabled))}}u.orderedMappingIndex,r.orderedMappingIndex,u.id,r.id;const n=u.mappedCues,o=r.mappedCues;if(n.length!==o.length||!o.every(((e,o)=>e===n[o]))){const n=i.querySelector('div.formGroup[data-field-name="cues"]');if(null!=i.dataset.editing){const t=g(o).map((n=>e.buildSelect(["fieldValue"],"mappedCues",n)));C(n),n.append(...t)}else null!=n&&T(n,o.join(", "))}}else{const e=D(r,d);t.append(e)}}}(n,o):null!=n&&null==o&&null==document.getElementById(r.cueConfigPanel)&&console.error("Unable to locate panel, skipping form teardown."):console.error("No config was provided, skipping form render.")}document.addEventListener("DOMContentLoaded",(function(){NodeCG.waitForReplicants(c,s,m,p).then((()=>{c.on(l.change,I)})).catch((e=>{console.error(e)}))}));
//# sourceMappingURL=index.ea9af7e3.js.map
