{"mappings":"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","sources":["src/dashboard/settings/HtmlHelpers.ts","src/types/SoundAlertReplicants.ts","src/types/ReplicantEvents.ts","src/dashboard/settings/types.d.ts","src/dashboard/settings/index.ts"],"sourcesContent":["import { type CSSClasses } from './types'\n\nfunction buildDiv (id?: string, classes?: string[]): HTMLDivElement {\n  const div = document.createElement('div')\n  if ((classes != null) && classes.length > 0) {\n    div.classList.add(...classes)\n  }\n  if (id != null) {\n    div.id = id\n  }\n  return div\n}\n\nfunction buildHiddenInput (name: string, value: string): HTMLInputElement {\n  const input = document.createElement('input')\n  input.type = 'hidden'\n  input.name = name\n  input.value = value\n  return input\n}\n\nfunction buildButton (name: string, text: string, classes?: string[]): HTMLButtonElement {\n  const button = document.createElement('button')\n  if ((classes != null) && classes.length > 0) {\n    button.classList.add(...classes)\n  }\n  button.name = name\n  button.innerText = text\n  return button\n}\n\nfunction buildLabel (forName: string, text: string, classes?: string[]): HTMLLabelElement {\n  const label = document.createElement('label')\n  if ((classes != null) && classes.length > 0) {\n    label.classList.add(...classes)\n  }\n  label.htmlFor = forName\n  label.innerText = text\n  return label\n}\n\nfunction buildSpan (text: string, classes?: string[]): HTMLSpanElement {\n  const span = document.createElement('span')\n  if ((classes != null) && classes.length > 0) {\n    span.classList.add(...classes)\n  }\n  span.innerText = text\n  return span\n}\n\nfunction buildTextInput (name: string, value: string, classes?: string[]): HTMLInputElement {\n  const input = document.createElement('input')\n  if ((classes != null) && classes.length > 0) {\n    input.classList.add(...classes)\n  }\n  input.type = 'text'\n  input.name = name\n  input.value = value\n  return input\n}\n\nfunction buildNumberInput (name: string, value: string, classes?: string[]): HTMLInputElement {\n  const input = document.createElement('input')\n  if ((classes != null) && classes.length > 0) {\n    input.classList.add(...classes)\n  }\n  input.type = 'number'\n  input.name = name\n  input.value = value\n  return input\n}\n\nexport interface SelectInputDataElem {\n  label: string\n  value: string\n  selected: boolean\n}\n\nfunction buildSelect (classes: string[], name: string, options: SelectInputDataElem[]): HTMLSelectElement {\n  const select = document.createElement('select')\n  if (classes != null && classes.length > 0) {\n    select.classList.add(...classes)\n  }\n  select.name = name\n  options.forEach((opt) => {\n    const o = document.createElement('option')\n    o.value = opt.value\n    o.innerText = opt.label\n    o.selected = opt.selected\n    select.add(o)\n  })\n  return select\n}\n\nfunction buildForm (name: string | null, id: string | null, classes: CSSClasses[]): HTMLFormElement {\n  const form = document.createElement('form')\n  if (name != null) {\n    form.name = name\n  }\n  if (id != null) {\n    form.id = id\n  }\n  if (classes != null && classes.length > 0) {\n    form.classList.add(...classes)\n  }\n  return form\n}\n\nexport default {\n  buildButton,\n  buildLabel,\n  buildTextInput,\n  buildSelect,\n  buildHiddenInput,\n  buildSpan,\n  buildDiv,\n  buildNumberInput,\n  buildForm\n}\n","export enum SoundAlertReplicants {\n  soundCueConfig = 'soundCueConfig',\n  soundCuesEnabled = 'soundCuesEnabled',\n  soundCueList = 'soundCueList',\n  soundCueLog = 'soundCueLog',\n  soundCueTypes = 'soundCueTypes',\n  soundCueCommandIndex = 'soundCueCommandIndex',\n  nodeCGServerSoundCues = 'soundCues' // this is for the extension to get the defined cues\n}\n","enum ReplicantEvents {\n  change = 'change'\n}\n\nexport default ReplicantEvents\n","\nexport enum CSSClasses {\n  commandFormRow = 'commandFormRow',\n  btnRemove = 'btnRemove',\n  btnAdd = 'btnAdd',\n  formGroup = 'formGroup',\n  middle = 'middle',\n  btnToggleEnabled = 'btnToggleEnabled',\n  enabled = 'enabled',\n  readOnly = 'readOnly',\n  hidden = 'hidden',\n  cueSelectWrapper = 'cueSelectWrapper'\n};\n\nexport enum ElementIDs {\n  cueConfigPanel = 'cueConfigPanel'\n}\n\nexport enum FormFieldNames {\n  id = 'id',\n  name = 'commandName',\n  cooldown = 'cooldownMs',\n  type = 'commandType',\n  cues = 'mappedCues'\n}\n\nexport interface SoundCommandPartial {\n  id: number\n  commandName: string\n  commandType: string\n  mappedCues: string []\n  coolDownMs: number | null\n}\n\nexport interface ConfigFormState {\n  editingRows: number[]\n  submittingRows: number[]\n  rowErrors: Record<number, string>\n  rendered: boolean\n  commandTypeOptions: SoundCommandType[]\n}\n","import HtmlHelpers, { type SelectInputDataElem } from './HtmlHelpers'\nimport { SoundAlertReplicants } from '../../types/SoundAlertReplicants'\nimport { type SoundCueNameList } from '../../types/SoundCueNameList'\nimport { type SoundCommandType } from '../../types/SoundCommandType'\nimport ReplicantEvents from '../../types/ReplicantEvents'\nimport { ElementIDs, CSSClasses, FormFieldNames, type SoundCommandPartial } from './types.d'\n\nconst CommandConfig = nodecg.Replicant<SoundCommandList>(SoundAlertReplicants.soundCueConfig)\nconst CommandTypes = nodecg.Replicant<SoundCommandType[]>(SoundAlertReplicants.soundCueTypes)\nconst SoundCues = nodecg.Replicant<SoundCueNameList>(SoundAlertReplicants.soundCueList)\nconst CueIndex = nodecg.Replicant<number>(SoundAlertReplicants.soundCueCommandIndex)\n\nfunction toggleCommandEnabled (id: number): void {\n  if (CommandConfig?.value == null) {\n    throw Error('Unable to retrieve command config - config replicant not available.')\n  }\n  const foundCommand = CommandConfig.value.find((c) => c.id === id)\n  if (foundCommand == null) {\n    throw Error(`Unable to find command with ID ${id}.`)\n  }\n  foundCommand.enabled = !foundCommand.enabled\n}\n\nfunction insertCommand (data: SoundCommandPartial): SoundCommand {\n  if (CommandConfig?.value == null || CueIndex?.value == null) {\n    throw Error('Unable to insert command config - config replicant not available.')\n  }\n\n  const newData: SoundCommand = {\n    ...data,\n    id: ++CueIndex.value,\n    allCuesAreValid: true,\n    enabled: true,\n    lastUseTimestamp: null,\n    orderedMappingIndex: 0,\n    commandUsageCount: 0\n  }\n  CommandConfig.value.push(newData)\n  return { ...newData }\n}\n\nfunction updateCommand (id: number, data: SoundCommandPartial): SoundCommand | null {\n  if (CommandConfig?.value == null) {\n    throw Error('Unable to update command config - config replicant not available.')\n  }\n  let updatedCommand: SoundCommand | null = null\n  for (let i = 0; i < CommandConfig.value.length; i++) {\n    if (CommandConfig.value[i].id === id) {\n      updatedCommand = {\n        ...CommandConfig.value[i],\n        ...data\n      }\n      CommandConfig.value[i] = updatedCommand\n      break\n    }\n  }\n  return updatedCommand != null ? { ...updatedCommand } : null\n}\n\nfunction getCommandConfigById (id: number): SoundCommand {\n  if (CommandConfig?.value == null) {\n    throw Error('Unable to retrieve command config - config replicant not available.')\n  }\n  const foundCommand = CommandConfig.value.find((c) => c.id === id)\n  if (foundCommand == null) {\n    throw Error(`Unable to find command with ID ${id}.`)\n  }\n  return { ...foundCommand }\n}\n\nfunction getTypeOptions (defaultValue?: string): SelectInputDataElem[] {\n  if (CommandTypes?.value == null) {\n    throw Error('Unable to retrieve command types.')\n  }\n  const typeOptions = CommandTypes.value.reduce<SelectInputDataElem[]>((prev, curr) => {\n    prev.push({\n      label: curr,\n      value: curr,\n      selected: defaultValue === curr\n    })\n    return prev\n  }, [{\n    label: 'Select one',\n    value: '-1',\n    selected: defaultValue == null\n  }])\n  return typeOptions\n}\n\nfunction getCueOptions (defaultValue?: string, soundCues?: SoundCueNameList): SelectInputDataElem[] {\n  let cues\n  if (soundCues != null) {\n    cues = soundCues\n  } else {\n    if (SoundCues?.value == null) {\n      throw Error('Sound cue replicant not available.')\n    }\n    cues = SoundCues.value\n  }\n\n  const cueOptions = cues.reduce<SelectInputDataElem[]>((prev, curr) => {\n    prev.push({\n      label: curr,\n      value: curr,\n      selected: defaultValue === curr\n    })\n    return prev\n  }, [{\n    label: 'Select one',\n    value: '-1',\n    selected: defaultValue == null\n  }])\n\n  return cueOptions\n}\n\nfunction getCueOptionsList (mappedCues: SoundCueNameList): SelectInputDataElem[][] {\n  if (SoundCues?.value == null) {\n    throw Error('Sound cue replicant not available.')\n  }\n  const cues = SoundCues.value\n  const cueOptionLists = mappedCues.map((c) => getCueOptions(c, cues))\n\n  return cueOptionLists\n}\n\n/**\n * Mouse click event for the enable/disable button.\n * Apply changes to config instantly.\n * @param e button click event\n */\nfunction onEnableButtonClicked (e: MouseEvent): void {\n  e.preventDefault()\n  if (CommandConfig?.value == null) {\n    console.error('Failed enabling/disabling sound alert - replicant not available.')\n    return\n  }\n  if (e.target == null) {\n    console.error('Failed enabling/disabling sound alert - no event target found.')\n    return\n  }\n  const target = e.target as HTMLButtonElement\n  if (target.dataset.cmdName == null) {\n    console.error('Failed enabling/disabling sound alert - command name found.')\n    return\n  }\n  const form = target.closest('form') as HTMLFormElement\n  if (form == null) {\n    console.error('Failed sound alert edit - unable to locate form.')\n    return\n  }\n\n  const cmdId = form.dataset.id\n  if (cmdId == null || cmdId.length === 0) {\n    console.error('Failed sound alert edit - unable to locate ID.')\n    return\n  }\n  const id = parseInt(cmdId)\n  if (isNaN(id)) {\n    console.error('Failed sound alert edit - invalid ID found.')\n    return\n  }\n\n  toggleCommandEnabled(id)\n}\n\nfunction removeValueElem (fg: HTMLDivElement): void {\n  const selector = '.fieldValue'\n  const fvs = fg.querySelectorAll(selector)\n  if (fvs != null && fvs.length > 0) {\n    for (let v = 0; v < fvs.length; v++) {\n      const fieldToRemove = fvs[v]\n      fg.removeChild(fieldToRemove)\n    }\n  }\n}\n\nfunction convertFormToReadonly (form: HTMLFormElement, nextValues?: SoundCommand): void {\n  const id = (form.dataset.id != null) ? parseInt(form.dataset.id) : -1\n  if (id < 0) {\n    console.error('Failed sound alert edit - no ID found.')\n    return\n  }\n\n  const formGroups = form.querySelectorAll('div.formGroup')\n  if (formGroups.length <= 0) {\n    console.error('Failed sound alert edit - unable to locate form groups.')\n    return\n  }\n\n  const foundCommand = nextValues != null ? nextValues : getCommandConfigById(id)\n  const fieldValueClass = ['fieldValue']\n\n  for (let x = 0; x < formGroups.length; x++) {\n    const fg = formGroups[x] as HTMLDivElement\n    switch (fg.dataset.fieldName) {\n      case 'name': {\n        const nameInput = HtmlHelpers.buildSpan(foundCommand.commandName, fieldValueClass)\n        removeValueElem(fg)\n        fg.appendChild(nameInput)\n        break\n      }\n      case 'cooldown': {\n        const cooldownVal = (foundCommand.coolDownMs != null) ? foundCommand.coolDownMs.toString() : '0'\n        const cooldownInput = HtmlHelpers.buildSpan(cooldownVal, fieldValueClass)\n        removeValueElem(fg)\n        fg.appendChild(cooldownInput)\n        break\n      }\n      case 'type': {\n        const typeInput = HtmlHelpers.buildSpan(foundCommand.commandType, fieldValueClass)\n        removeValueElem(fg)\n        fg.appendChild(typeInput)\n        break\n      }\n      case 'cues': {\n        const cueElem = HtmlHelpers.buildSpan(foundCommand.mappedCues.join((', ')), fieldValueClass)\n        removeValueElem(fg)\n        fg.append(cueElem)\n        break\n      }\n      case 'edit': {\n        const editButton = HtmlHelpers.buildButton('btnEdit', 'Edit', [])\n        editButton.onclick = onEditButtonClick\n        fg.replaceChildren(editButton)\n        break\n      }\n      default:\n        break\n    }\n  }\n\n  form.removeEventListener('submit', onFormSubmit)\n  form.dataset.editing = 'false'\n}\n\nfunction onEditCancelClick (event: MouseEvent): void {\n  event.preventDefault()\n\n  if (event.target == null) {\n    console.error('Failed sound alert edit - no event target found.')\n    return\n  }\n  const target = event.target as HTMLButtonElement\n  const form = target.closest('form') as HTMLFormElement\n  if (form == null) {\n    console.error('Failed sound alert edit - unable to locate form.')\n    return\n  }\n  convertFormToReadonly(form)\n}\n\nfunction onFormSubmit (event: SubmitEvent): void {\n  event.preventDefault()\n  if (event.target == null) {\n    console.error('Failed saving sound alert - no event target found.')\n    return\n  }\n  const form = event.target as HTMLFormElement\n  const formData = new FormData(form)\n  const id = formData.get(FormFieldNames.id) as string\n  const cmdId = parseInt(id)\n  if (isNaN(cmdId)) {\n    console.error('Failed saving sound alert - no ID found.')\n    return\n  }\n\n  const cmdName = formData.get(FormFieldNames.name) as string\n  const cmdType = formData.get(FormFieldNames.type) as string\n  const cmdCues = formData.getAll(FormFieldNames.cues) as string[]\n  const cooldown = formData.get(FormFieldNames.cooldown) as string\n  let cooldownValue: number | null = parseInt(cooldown)\n  if (isNaN(cooldownValue) || cooldownValue === 0) {\n    cooldownValue = null\n  }\n  console.log('id:', cmdId, 'name:', cmdName, 'cooldown', cooldown, 'type', cmdType, 'cues', cmdCues)\n  const oldCommand = getCommandConfigById(cmdId)\n  let updated: SoundCommand | null = null\n  if (oldCommand == null) {\n    updated = insertCommand({\n      id: -1,\n      commandName: cmdName,\n      commandType: cmdType,\n      mappedCues: cmdCues,\n      coolDownMs: cooldownValue\n    })\n    if (updated == null) {\n      throw new Error(`An error occurred creating sound command ${cmdName}, command not created.`)\n    }\n  } else {\n    updated = updateCommand(cmdId, {\n      id: cmdId,\n      commandName: cmdName,\n      commandType: cmdType,\n      mappedCues: cmdCues,\n      coolDownMs: cooldownValue\n    })\n    if (updated == null) {\n      throw new Error(`An error occurred updating sound command ${cmdName}, command not updated.`)\n    }\n  }\n  form.dataset.commandName = updated.commandName\n  form.dataset.id = updated.id.toString()\n  convertFormToReadonly(form, updated)\n}\n\nfunction onEditButtonClick (event: MouseEvent): void {\n  event.preventDefault()\n\n  if (event.target == null) {\n    console.error('Failed sound alert edit - no event target found.')\n    return\n  }\n\n  const target = event.target as HTMLButtonElement\n  const form = target.closest('form') as HTMLFormElement\n  if (form == null) {\n    console.error('Failed sound alert edit - unable to locate form.')\n    return\n  }\n  form.dataset.editing = 'true'\n  form.addEventListener('submit', onFormSubmit)\n\n  const id = (form.dataset.id != null) ? parseInt(form.dataset.id) : -1\n  if (id < 0) {\n    console.error('Failed sound alert edit - no ID found.')\n    return\n  }\n\n  const formGroups = form.querySelectorAll('div.formGroup')\n  if (formGroups.length <= 0) {\n    console.error('Failed sound alert edit - unable to locate form groups.')\n    return\n  }\n\n  const foundCommand = getCommandConfigById(id)\n  const fieldValueClass = ['fieldValue']\n\n  for (let x = 0; x < formGroups.length; x++) {\n    const fg = formGroups[x] as HTMLDivElement\n    switch (fg.dataset.fieldName) {\n      case 'name': {\n        const nameInput = HtmlHelpers.buildTextInput(FormFieldNames.name, foundCommand.commandName, fieldValueClass)\n        removeValueElem(fg)\n        fg.appendChild(nameInput)\n        break\n      }\n      case 'cooldown': {\n        const cooldownVal = (foundCommand.coolDownMs != null) ? foundCommand.coolDownMs.toString() : '0'\n        const cooldownInput = HtmlHelpers.buildNumberInput(FormFieldNames.cooldown, cooldownVal, fieldValueClass)\n        removeValueElem(fg)\n        fg.appendChild(cooldownInput)\n        break\n      }\n      case 'type': {\n        const typeOptions = getTypeOptions(foundCommand.commandType)\n        const typeInput = HtmlHelpers.buildSelect(fieldValueClass, FormFieldNames.type, typeOptions)\n        removeValueElem(fg)\n        fg.appendChild(typeInput)\n        break\n      }\n      case 'cues': {\n        const cueLists = getCueOptionsList(foundCommand.mappedCues)\n        const cueElems = cueLists.map((c) => {\n          return HtmlHelpers.buildSelect(fieldValueClass, FormFieldNames.cues, c)\n        })\n        removeValueElem(fg)\n        fg.append(...cueElems)\n        break\n      }\n      case 'edit': {\n        const saveButton = HtmlHelpers.buildButton('btnSave', 'Save', [CSSClasses.btnAdd])\n        const cancelButton = HtmlHelpers.buildButton('btnCancel', 'Cancel', [])\n        cancelButton.onclick = onEditCancelClick\n        const deleteButton = HtmlHelpers.buildButton('btnDelete', 'Delete', [CSSClasses.btnRemove])\n        fg.replaceChildren(saveButton, cancelButton, deleteButton)\n        break\n      }\n      default:\n        break\n    }\n  }\n}\n\nfunction buildEnableButton (enabled: boolean, commandName: string): HTMLButtonElement {\n  const txt = enabled ? 'On' : 'Off'\n  const btn = HtmlHelpers.buildButton('btnEnabled', txt, [CSSClasses.btnToggleEnabled])\n  if (enabled) {\n    btn.classList.add(CSSClasses.enabled)\n  }\n  btn.onclick = onEnableButtonClicked\n  btn.dataset.cmdName = commandName\n  btn.dataset.enabled = enabled.toString()\n  return btn\n}\n\nfunction buildFormGroup (extraClasses?: CSSClasses[]): HTMLDivElement {\n  let classes = [CSSClasses.formGroup]\n  if (extraClasses != null) {\n    classes = classes.concat(extraClasses)\n  }\n  const elem = HtmlHelpers.buildDiv(undefined, classes)\n  return elem\n}\n\n// function btnRemoveClick (e: MouseEvent): void {\n//   e.preventDefault()\n//   if (CommandConfig?.value == null) {\n//     console.error('Failed removing command - replicant not available.')\n//     return\n//   }\n//   if (e.target == null) {\n//     console.error('Failed removing command - no event target found.')\n//     return\n//   }\n//   const target = e.target as HTMLButtonElement\n//   if (target.dataset?.cmdName == null) {\n//     console.error('Failed removing command - command name found.')\n//   }\n// }\n\nfunction buildReadonlyFormGroup (fieldName: string, labelName: string, label: string, text: string): HTMLDivElement {\n  const fg = buildFormGroup()\n  fg.dataset.fieldName = fieldName\n  const labelElem = HtmlHelpers.buildLabel(labelName, label)\n  const spanElem = HtmlHelpers.buildSpan(text, ['fieldValue'])\n  fg.append(labelElem, spanElem)\n  return fg\n}\n\nfunction mapCommandToForm (cmd: SoundCommand, index: number): HTMLFormElement {\n  if (CommandTypes?.value == null) {\n    throw Error('Unable to map command rows - no command types are loaded.')\n  }\n\n  if (SoundCues?.value == null) {\n    throw Error('Unable to map command rows - no sound cues are loaded.')\n  }\n\n  console.log(JSON.stringify(cmd))\n\n  const rowDiv = HtmlHelpers.buildForm(`commandForm-${cmd.id}`, null, [])\n  rowDiv.dataset.id = cmd.id.toString()\n  rowDiv.dataset.commandName = cmd.commandName\n  rowDiv.dataset.index = index.toString()\n  rowDiv.dataset.editing = 'false'\n\n  const newFormRow = HtmlHelpers.buildDiv(`cmd-row-${cmd.id}`, [CSSClasses.commandFormRow])\n\n  // enable/disable button\n  let fg = buildFormGroup([CSSClasses.middle])\n  fg.dataset.fieldName = 'enabled'\n  let btn = buildEnableButton(cmd.enabled, cmd.commandName)\n  fg.appendChild(btn)\n  newFormRow.appendChild(fg)\n\n  fg = buildFormGroup([CSSClasses.middle])\n  fg.dataset.fieldName = 'id'\n  const span = HtmlHelpers.buildSpan(cmd.id.toString())\n  fg.appendChild(span)\n  const hid = HtmlHelpers.buildHiddenInput(FormFieldNames.id, cmd.id.toString())\n  fg.appendChild(hid)\n  newFormRow.appendChild(fg)\n\n  // command name field\n  fg = buildReadonlyFormGroup('name', 'commandName', 'Name', cmd.commandName)\n  newFormRow.appendChild(fg)\n\n  // cooldown field\n  const txt = (cmd.coolDownMs != null) ? `${cmd.coolDownMs} ms` : 'None'\n  fg = buildReadonlyFormGroup('cooldown', 'coolDownMs', 'Cooldown', txt)\n  newFormRow.appendChild(fg)\n\n  // command type field\n  fg = buildReadonlyFormGroup('type', 'commandType', 'Type', cmd.commandType)\n  newFormRow.appendChild(fg)\n\n  // mapped cues\n  const cueTxt = cmd.mappedCues.length <= 0 ? 'None' : cmd.mappedCues.join(', ')\n  fg = buildReadonlyFormGroup('cues', 'mappedCues', 'Cues', cueTxt)\n  newFormRow.appendChild(fg)\n\n  // edit button\n  fg = buildFormGroup([CSSClasses.middle])\n  fg.dataset.fieldName = 'edit'\n  btn = HtmlHelpers.buildButton('', 'Edit', [])\n  btn.onclick = onEditButtonClick\n  fg.appendChild(btn)\n  newFormRow.appendChild(fg)\n\n  // add the row to the form\n  rowDiv.appendChild(newFormRow)\n  return rowDiv\n}\n\nfunction initializeSoundCueForms (config: SoundCommandList): void {\n  const mapPanel = document.getElementById(ElementIDs.cueConfigPanel)\n  if (mapPanel == null) {\n    console.error('Unable to locate panel, skipping form initialization.')\n    return\n  }\n  const rows = config.map(mapCommandToForm)\n  mapPanel.append(...rows)\n}\n\nfunction updateValueElem (fg: HTMLDivElement, value: string): void {\n  const selector = '.fieldValue'\n  const fv = fg.querySelector(selector) as HTMLInputElement | HTMLSpanElement | HTMLSelectElement\n  if (fv != null) {\n    if (fv.tagName === 'span') {\n      (fv as HTMLSpanElement).innerText = value\n    } else if (fv.tagName === 'input') {\n      (fv as HTMLInputElement).value = value\n    } else if (fv.tagName === 'select') {\n      (fv as HTMLSelectElement).value = value\n    }\n  }\n}\n\nfunction updateSoundCueForms (newConfig: SoundCommandList, oldConfig: SoundCommandList): void {\n  const mapPanel = document.getElementById(ElementIDs.cueConfigPanel)\n  if (mapPanel == null) {\n    console.error('Unable to locate panel, skipping form update.')\n    return\n  }\n  const foundIds = []\n  for (let i = 0; i < newConfig.length; i++) {\n    const cfg = newConfig[i]\n    foundIds.push(cfg.id)\n    // let hasChanges = false\n    const oldCfg = (i < oldConfig.length) ? oldConfig[i] : null\n    const form = document.querySelector(`form[data-id='${cfg.id}']`) as HTMLFormElement\n\n    if (oldCfg != null) {\n      if (oldCfg.allCuesAreValid !== cfg.allCuesAreValid) {\n        // hasChanges = true\n      }\n      if (oldCfg.lastUseTimestamp !== cfg.lastUseTimestamp) {\n        // hasChanges = true\n      }\n      if (oldCfg.commandName !== cfg.commandName) {\n        // hasChanges = true\n        const fg = form.querySelector('div.formGroup[data-field-name=\"name\"]') as HTMLDivElement\n        if (fg != null) {\n          updateValueElem(fg, cfg.commandName)\n        }\n      }\n      if (oldCfg.commandType !== cfg.commandType) {\n        // hasChanges = true\n        const fg = form.querySelector('div.formGroup[data-field-name=\"type\"]') as HTMLDivElement\n        if (fg != null) {\n          updateValueElem(fg, cfg.commandType)\n        }\n      }\n      if (oldCfg.commandUsageCount !== cfg.commandUsageCount) {\n        // hasChanges = true\n      }\n      if (oldCfg.coolDownMs !== cfg.coolDownMs) {\n        // hasChanges = true\n        const fg = form.querySelector('div.formGroup[data-field-name=\"cooldown\"]') as HTMLDivElement\n        if (fg != null) {\n          updateValueElem(fg, (cfg.coolDownMs != null) ? cfg.coolDownMs.toString() : '0')\n        }\n      }\n      if (oldCfg.enabled !== cfg.enabled) {\n        // hasChanges = true\n        const fg = form.querySelector('div.formGroup[data-field-name=\"enabled\"]') as HTMLDivElement\n        if (fg != null) {\n          const btn = fg.querySelector('button') as HTMLButtonElement\n          btn.dataset.enabled = cfg.enabled.toString()\n          if (cfg.enabled) {\n            btn.innerText = 'On'\n            btn.classList.add(CSSClasses.enabled)\n          } else {\n            btn.innerText = 'Off'\n            btn.classList.remove(CSSClasses.enabled)\n          }\n        }\n      }\n      if (oldCfg.orderedMappingIndex !== cfg.orderedMappingIndex) {\n        // hasChanges = true\n      }\n      if (oldCfg.id !== cfg.id) {\n        // hasChanges = true\n      }\n      const oldCues = oldCfg.mappedCues\n      const newCues = cfg.mappedCues\n      if ((oldCues.length !== newCues.length) || !newCues.every((c, idx) => c === oldCues[idx])) {\n        // hasChanges = true\n        const fg = form.querySelector('div.formGroup[data-field-name=\"cues\"]') as HTMLDivElement\n        if (form.dataset.editing != null) {\n          // if we're editing, just delete all the old dropdowns\n          const cueLists = getCueOptionsList(newCues)\n          const cueElems = cueLists.map((c) => {\n            return HtmlHelpers.buildSelect(['fieldValue'], 'mappedCues', c)\n          })\n          removeValueElem(fg)\n          fg.append(...cueElems)\n        } else {\n          if (fg != null) {\n            updateValueElem(fg, newCues.join(', '))\n          }\n        }\n      }\n    } else {\n      const row = mapCommandToForm(cfg, i)\n      mapPanel.append(row)\n    }\n  }\n}\n\nfunction teardownSoundCueForms (): void {\n  const mapPanel = document.getElementById(ElementIDs.cueConfigPanel)\n  if (mapPanel == null) {\n    console.error('Unable to locate panel, skipping form teardown.')\n  }\n}\n\nfunction onSoundCommandConfigChange (newConfig: SoundCommandList, oldConfig: SoundCommandList): void {\n  if (!Array.isArray(newConfig)) {\n    console.error('No config was provided, skipping form render.')\n    return\n  }\n\n  if (newConfig != null && oldConfig == null) {\n    // create from scratch\n    initializeSoundCueForms(newConfig)\n  } else if (newConfig != null && oldConfig != null) {\n    // update the dom\n    updateSoundCueForms(newConfig, oldConfig)\n  } else if (newConfig != null && oldConfig == null) {\n    // tear down the forms\n    teardownSoundCueForms()\n  }\n};\n\nfunction setupSoundCueConfigForm (): void {\n  NodeCG.waitForReplicants(CommandConfig, CommandTypes, SoundCues, CueIndex)\n    .then(() => {\n      CommandConfig.on(ReplicantEvents.change, onSoundCommandConfigChange)\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n}\n\ndocument.addEventListener('DOMContentLoaded', setupSoundCueConfigForm)\n"],"names":["$c9667c13806cac9b$export$2e2bcd8739ae039","name","text","classes","button","document","createElement","length","classList","add","innerText","forName","label","htmlFor","value","input","type","options","select","forEach","opt","o","selected","span","id","div","form","$00ac697320bc0dea$export$501f6df0ab3ca018","SoundAlertReplicants","$f6050c0f5fd2d3f8$var$ReplicantEvents","$f6050c0f5fd2d3f8$export$2e2bcd8739ae039","$14bce57df13bef4b$export$1112fe37bc980be0","CSSClasses","$14bce57df13bef4b$export$d0ba48f9ed05b63c","$14bce57df13bef4b$export$749db66363653aa6","FormFieldNames","$8fd10160d14e935e$var$CommandConfig","nodecg","Replicant","soundCueConfig","$8fd10160d14e935e$var$CommandTypes","soundCueTypes","$8fd10160d14e935e$var$SoundCues","soundCueList","$8fd10160d14e935e$var$CueIndex","soundCueCommandIndex","$8fd10160d14e935e$var$getCommandConfigById","Error","foundCommand","find","c","$8fd10160d14e935e$var$getTypeOptions","defaultValue","reduce","prev","curr","push","$8fd10160d14e935e$var$getCueOptionsList","mappedCues","cues","cueOptionLists","map","soundCues","$8fd10160d14e935e$var$getCueOptions","$8fd10160d14e935e$var$onEnableButtonClicked","e","preventDefault","console","error","target","dataset","cmdName","closest","cmdId","parseInt","isNaN","enabled","$8fd10160d14e935e$var$toggleCommandEnabled","$8fd10160d14e935e$var$removeValueElem","fg","fvs","querySelectorAll","v","fieldToRemove","removeChild","$8fd10160d14e935e$var$convertFormToReadonly","nextValues","formGroups","fieldValueClass","x","fieldName","nameInput","buildSpan","commandName","appendChild","cooldownVal","coolDownMs","toString","cooldownInput","typeInput","commandType","cueElem","join","append","editButton","buildButton","onclick","$8fd10160d14e935e$var$onEditButtonClick","replaceChildren","removeEventListener","$8fd10160d14e935e$var$onFormSubmit","editing","$8fd10160d14e935e$var$onEditCancelClick","event","formData","FormData","get","cmdType","cmdCues","getAll","cooldown","cooldownValue","log","updated","data","newData","allCuesAreValid","lastUseTimestamp","orderedMappingIndex","commandUsageCount","$8fd10160d14e935e$var$insertCommand","updatedCommand","i","$8fd10160d14e935e$var$updateCommand","addEventListener","buildTextInput","buildNumberInput","typeOptions","buildSelect","cueElems","saveButton","btnAdd","cancelButton","deleteButton","btnRemove","$8fd10160d14e935e$var$buildFormGroup","extraClasses","formGroup","concat","buildDiv","undefined","$8fd10160d14e935e$var$buildReadonlyFormGroup","labelName","labelElem","buildLabel","spanElem","$8fd10160d14e935e$var$mapCommandToForm","cmd","index","JSON","stringify","rowDiv","buildForm","newFormRow","commandFormRow","middle","btn","txt","btnToggleEnabled","$8fd10160d14e935e$var$buildEnableButton","hid","buildHiddenInput","$8fd10160d14e935e$var$updateValueElem","fv","querySelector","tagName","$8fd10160d14e935e$var$onSoundCommandConfigChange","newConfig","oldConfig","Array","isArray","config","mapPanel","getElementById","cueConfigPanel","rows","$8fd10160d14e935e$var$initializeSoundCueForms","foundIds","cfg","oldCfg","remove","oldCues","newCues","every","idx","row","$8fd10160d14e935e$var$updateSoundCueForms","NodeCG","waitForReplicants","then","on","change","catch","err"],"version":3,"file":"index.ea9af7e3.js.map"}