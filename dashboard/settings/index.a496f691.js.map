{"mappings":"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","sources":["src/dashboard/settings/HtmlHelpers.ts","src/types/SoundAlertReplicants.ts","src/types/ReplicantEvents.ts","src/dashboard/settings/types.d.ts","src/dashboard/settings/index.ts"],"sourcesContent":["import { type CSSClasses } from './types'\n\nfunction buildDiv (id?: string, classes?: string[]): HTMLDivElement {\n  const div = document.createElement('div')\n  if ((classes != null) && classes.length > 0) {\n    div.classList.add(...classes)\n  }\n  if (id != null) {\n    div.id = id\n  }\n  return div\n}\n\nfunction buildHiddenInput (name: string, value: string): HTMLInputElement {\n  const input = document.createElement('input')\n  input.type = 'hidden'\n  input.name = name\n  input.value = value\n  return input\n}\n\nfunction buildButton (name: string, text: string, classes?: string[]): HTMLButtonElement {\n  const button = document.createElement('button')\n  if ((classes != null) && classes.length > 0) {\n    button.classList.add(...classes)\n  }\n  button.name = name\n  button.innerText = text\n  return button\n}\n\nfunction buildLabel (forName: string, text: string, classes?: string[]): HTMLLabelElement {\n  const label = document.createElement('label')\n  if ((classes != null) && classes.length > 0) {\n    label.classList.add(...classes)\n  }\n  label.htmlFor = forName\n  label.innerText = text\n  return label\n}\n\nfunction buildSpan (text: string, classes?: string[]): HTMLSpanElement {\n  const span = document.createElement('span')\n  if ((classes != null) && classes.length > 0) {\n    span.classList.add(...classes)\n  }\n  span.innerText = text\n  return span\n}\n\nfunction buildTextInput (name: string, value: string, classes?: string[]): HTMLInputElement {\n  const input = document.createElement('input')\n  if ((classes != null) && classes.length > 0) {\n    input.classList.add(...classes)\n  }\n  input.type = 'text'\n  input.name = name\n  input.value = value\n  return input\n}\n\nfunction buildNumberInput (name: string, value: string, classes?: string[]): HTMLInputElement {\n  const input = document.createElement('input')\n  if ((classes != null) && classes.length > 0) {\n    input.classList.add(...classes)\n  }\n  input.type = 'number'\n  input.name = name\n  input.value = value\n  return input\n}\n\nexport interface SelectInputDataElem {\n  label: string\n  value: string\n  selected: boolean\n}\n\nfunction buildSelect (classes: string[], name: string, options: SelectInputDataElem[]): HTMLSelectElement {\n  const select = document.createElement('select')\n  if (classes != null && classes.length > 0) {\n    select.classList.add(...classes)\n  }\n  select.name = name\n  options.forEach((opt) => {\n    const o = document.createElement('option')\n    o.value = opt.value\n    o.innerText = opt.label\n    o.selected = opt.selected\n    select.add(o)\n  })\n  return select\n}\n\nfunction buildForm (name: string | null, id: string | null, classes: CSSClasses[]): HTMLFormElement {\n  const form = document.createElement('form')\n  if (name != null) {\n    form.name = name\n  }\n  if (id != null) {\n    form.id = id\n  }\n  if (classes != null && classes.length > 0) {\n    form.classList.add(...classes)\n  }\n  return form\n}\n\nexport default {\n  buildButton,\n  buildLabel,\n  buildTextInput,\n  buildSelect,\n  buildHiddenInput,\n  buildSpan,\n  buildDiv,\n  buildNumberInput,\n  buildForm\n}\n","export enum SoundAlertReplicants {\n  soundCueConfig = 'soundCueConfig',\n  soundCuesEnabled = 'soundCuesEnabled',\n  soundCueList = 'soundCueList',\n  soundCueLog = 'soundCueLog',\n  soundCueTypes = 'soundCueTypes',\n  soundCueCommandIndex = 'soundCueCommandIndex',\n  nodeCGServerSoundCues = 'soundCues' // this is for the extension to get the defined cues\n}\n","enum ReplicantEvents {\n  change = 'change'\n}\n\nexport default ReplicantEvents\n","\nexport enum CSSClasses {\n  commandFormRow = 'commandFormRow',\n  btnRemove = 'btnRemove',\n  btnAdd = 'btnAdd',\n  formGroup = 'formGroup',\n  middle = 'middle',\n  btnToggleEnabled = 'btnToggleEnabled',\n  enabled = 'enabled',\n  readOnly = 'readOnly',\n  hidden = 'hidden',\n  cueSelectWrapper = 'cueSelectWrapper'\n};\n\nexport enum ElementIDs {\n  cueConfigPanel = 'cueConfigPanel'\n};\n\nexport interface ConfigFormState {\n  editingRows: number[]\n  submittingRows: number[]\n  rowErrors: Record<number, string>\n  rendered: boolean\n  commandTypeOptions: SoundCommandType[]\n}\n","import HtmlHelpers, { type SelectInputDataElem } from './HtmlHelpers'\nimport { SoundAlertReplicants } from '../../types/SoundAlertReplicants'\nimport { type SoundCueNameList } from '../../types/SoundCueNameList'\nimport { type SoundCommandType } from '../../types/SoundCommandType'\nimport ReplicantEvents from '../../types/ReplicantEvents'\nimport { ElementIDs, CSSClasses } from './types.d'\n\nconst CommandConfig = nodecg.Replicant<SoundCommandList>(SoundAlertReplicants.soundCueConfig)\nconst CommandTypes = nodecg.Replicant<SoundCommandType[]>(SoundAlertReplicants.soundCueTypes)\nconst SoundCues = nodecg.Replicant<SoundCueNameList>(SoundAlertReplicants.soundCueList)\n\nfunction getCommandConfigById (id: number): SoundCommand {\n  if (CommandConfig?.value == null) {\n    throw Error('Unable to retrieve command config - config replicant not available.')\n  }\n  const foundCommand = CommandConfig.value.find((c) => c.id === id)\n  if (foundCommand == null) {\n    throw Error(`Unable to find command with ID ${id}.`)\n  }\n  return { ...foundCommand }\n}\n\n// function getLiveCommandConfigById (id: number): SoundCommand {\n//   if (CommandConfig?.value == null) {\n//     throw Error('Unable to retrieve command config - config replicant not available.')\n//   }\n//   const foundCommand = CommandConfig.value.find((c) => c.id === id)\n//   if (foundCommand == null) {\n//     throw Error(`Unable to find command with ID ${id}.`)\n//   }\n//   return foundCommand\n// }\n\nfunction getTypeOptions (defaultValue?: string): SelectInputDataElem[] {\n  if (CommandTypes?.value == null) {\n    throw Error('Unable to retrieve command types.')\n  }\n  const typeOptions = CommandTypes.value.reduce<SelectInputDataElem[]>((prev, curr) => {\n    prev.push({\n      label: curr,\n      value: curr,\n      selected: defaultValue === curr\n    })\n    return prev\n  }, [{\n    label: 'Select one',\n    value: '-1',\n    selected: defaultValue == null\n  }])\n  return typeOptions\n}\n\nfunction getCueOptions (defaultValue?: string, soundCues?: SoundCueNameList): SelectInputDataElem[] {\n  let cues\n  if (soundCues != null) {\n    cues = soundCues\n  } else {\n    if (SoundCues?.value == null) {\n      throw Error('Sound cue replicant not available.')\n    }\n    cues = SoundCues.value\n  }\n\n  const cueOptions = cues.reduce<SelectInputDataElem[]>((prev, curr) => {\n    prev.push({\n      label: curr,\n      value: curr,\n      selected: defaultValue === curr\n    })\n    return prev\n  }, [{\n    label: 'Select one',\n    value: '-1',\n    selected: defaultValue == null\n  }])\n\n  return cueOptions\n}\n\nfunction getCueOptionsList (mappedCues: SoundCueNameList): SelectInputDataElem[][] {\n  if (SoundCues?.value == null) {\n    throw Error('Sound cue replicant not available.')\n  }\n  const cues = SoundCues.value\n  const cueOptionLists = mappedCues.map((c) => getCueOptions(c, cues))\n\n  return cueOptionLists\n}\n\n/**\n * Mouse click event for the enable/disable button.\n * Apply changes to config instantly.\n * @param e button click event\n */\nfunction onEnableButtonClicked (e: MouseEvent): void {\n  e.preventDefault()\n  if (CommandConfig?.value == null) {\n    console.error('Failed enabling/disabling sound alert - replicant not available.')\n    return\n  }\n  if (e.target == null) {\n    console.error('Failed enabling/disabling sound alert - no event target found.')\n    return\n  }\n  const target = e.target as HTMLButtonElement\n  if (target.dataset.cmdName == null) {\n    console.error('Failed enabling/disabling sound alert - command name found.')\n    return\n  }\n\n  const cmdName = target.dataset.cmdName\n  const foundCommand = CommandConfig.value.find((c) => c.commandName === cmdName)\n  if (foundCommand == null) {\n    console.error(`Failed enabling/disabling sound alert - command matching '${cmdName}' not found.`)\n    return\n  }\n\n  // check the target's dataset prop.\n  const enabled = (target.dataset.enabled === 'true')\n\n  // this will trigger a re-render\n  foundCommand.enabled = !enabled\n}\n\nfunction removeValueElem (fg: HTMLDivElement): void {\n  const selector = '.fieldValue'\n  const fvs = fg.querySelectorAll(selector)\n  if (fvs != null && fvs.length > 0) {\n    for (let v = 0; v < fvs.length; v++) {\n      const fieldToRemove = fvs[v]\n      fg.removeChild(fieldToRemove)\n    }\n  }\n}\n\nfunction onEditCancelClick (event: MouseEvent): void {\n  event.preventDefault()\n\n  if (event.target == null) {\n    console.error('Failed sound alert edit - no event target found.')\n    return\n  }\n  const target = event.target as HTMLButtonElement\n  const form = target.closest('form') as HTMLFormElement\n  if (form == null) {\n    console.error('Failed sound alert edit - unable to locate form.')\n    return\n  }\n\n  const id = (form.dataset.id != null) ? parseInt(form.dataset.id) : -1\n  if (id < 0) {\n    console.error('Failed sound alert edit - no ID found.')\n    return\n  }\n\n  const formGroups = form.querySelectorAll('div.formGroup')\n  if (formGroups.length <= 0) {\n    console.error('Failed sound alert edit - unable to locate form groups.')\n    return\n  }\n\n  const foundCommand = getCommandConfigById(id)\n  const fieldValueClass = ['fieldValue']\n\n  for (let x = 0; x < formGroups.length; x++) {\n    const fg = formGroups[x] as HTMLDivElement\n    switch (fg.dataset.fieldName) {\n      case 'name': {\n        const nameInput = HtmlHelpers.buildSpan(foundCommand.commandName, fieldValueClass)\n        removeValueElem(fg)\n        fg.appendChild(nameInput)\n        break\n      }\n      case 'cooldown': {\n        const cooldownVal = (foundCommand.coolDownMs != null) ? foundCommand.coolDownMs.toString() : '0'\n        const cooldownInput = HtmlHelpers.buildSpan(cooldownVal, fieldValueClass)\n        removeValueElem(fg)\n        fg.appendChild(cooldownInput)\n        break\n      }\n      case 'type': {\n        const typeInput = HtmlHelpers.buildSpan(foundCommand.commandType, fieldValueClass)\n        removeValueElem(fg)\n        fg.appendChild(typeInput)\n        break\n      }\n      case 'cues': {\n        const cueElem = HtmlHelpers.buildSpan(foundCommand.mappedCues.join((', ')), fieldValueClass)\n        removeValueElem(fg)\n        fg.append(cueElem)\n        break\n      }\n      case 'edit': {\n        const editButton = HtmlHelpers.buildButton('btnEdit', 'Edit', [])\n        editButton.onclick = onEditButtonClick\n        fg.replaceChildren(editButton)\n        break\n      }\n      default:\n        break\n    }\n  }\n\n  form.dataset.editing = 'false'\n}\n\nfunction onEditButtonClick (event: MouseEvent): void {\n  event.preventDefault()\n\n  if (event.target == null) {\n    console.error('Failed sound alert edit - no event target found.')\n    return\n  }\n\n  const target = event.target as HTMLButtonElement\n  const form = target.closest('form') as HTMLFormElement\n  if (form == null) {\n    console.error('Failed sound alert edit - unable to locate form.')\n    return\n  }\n  form.dataset.editing = 'true'\n\n  const id = (form.dataset.id != null) ? parseInt(form.dataset.id) : -1\n  if (id < 0) {\n    console.error('Failed sound alert edit - no ID found.')\n    return\n  }\n\n  const formGroups = form.querySelectorAll('div.formGroup')\n  if (formGroups.length <= 0) {\n    console.error('Failed sound alert edit - unable to locate form groups.')\n    return\n  }\n\n  const foundCommand = getCommandConfigById(id)\n  const fieldValueClass = ['fieldValue']\n\n  for (let x = 0; x < formGroups.length; x++) {\n    const fg = formGroups[x] as HTMLDivElement\n    switch (fg.dataset.fieldName) {\n      case 'name': {\n        const nameInput = HtmlHelpers.buildTextInput('commandName', foundCommand.commandName, fieldValueClass)\n        removeValueElem(fg)\n        fg.appendChild(nameInput)\n        break\n      }\n      case 'cooldown': {\n        const cooldownVal = (foundCommand.coolDownMs != null) ? foundCommand.coolDownMs.toString() : '0'\n        const cooldownInput = HtmlHelpers.buildNumberInput('cooldownMs', cooldownVal, fieldValueClass)\n        removeValueElem(fg)\n        fg.appendChild(cooldownInput)\n        break\n      }\n      case 'type': {\n        const typeOptions = getTypeOptions(foundCommand.commandType)\n        const typeInput = HtmlHelpers.buildSelect(fieldValueClass, 'commandType', typeOptions)\n        removeValueElem(fg)\n        fg.appendChild(typeInput)\n        break\n      }\n      case 'cues': {\n        const cueLists = getCueOptionsList(foundCommand.mappedCues)\n        const cueElems = cueLists.map((c) => {\n          return HtmlHelpers.buildSelect(fieldValueClass, 'mappedCues', c)\n        })\n        removeValueElem(fg)\n        fg.append(...cueElems)\n        break\n      }\n      case 'edit': {\n        const saveButton = HtmlHelpers.buildButton('btnSave', 'Save', [CSSClasses.btnAdd])\n        const cancelButton = HtmlHelpers.buildButton('btnCancel', 'Cancel', [])\n        cancelButton.onclick = onEditCancelClick\n        const deleteButton = HtmlHelpers.buildButton('btnDelete', 'Delete', [CSSClasses.btnRemove])\n        fg.replaceChildren(saveButton, cancelButton, deleteButton)\n        break\n      }\n      default:\n        break\n    }\n  }\n}\n\nfunction buildEnableButton (enabled: boolean, commandName: string): HTMLButtonElement {\n  const txt = enabled ? 'On' : 'Off'\n  const btn = HtmlHelpers.buildButton('btnEnabled', txt, [CSSClasses.btnToggleEnabled])\n  if (enabled) {\n    btn.classList.add(CSSClasses.enabled)\n  }\n  btn.onclick = onEnableButtonClicked\n  btn.dataset.cmdName = commandName\n  btn.dataset.enabled = enabled.toString()\n  return btn\n}\n\nfunction buildFormGroup (extraClasses?: CSSClasses[]): HTMLDivElement {\n  let classes = [CSSClasses.formGroup]\n  if (extraClasses != null) {\n    classes = classes.concat(extraClasses)\n  }\n  const elem = HtmlHelpers.buildDiv(undefined, classes)\n  return elem\n}\n\n// function btnRemoveClick (e: MouseEvent): void {\n//   e.preventDefault()\n//   if (CommandConfig?.value == null) {\n//     console.error('Failed removing command - replicant not available.')\n//     return\n//   }\n//   if (e.target == null) {\n//     console.error('Failed removing command - no event target found.')\n//     return\n//   }\n//   const target = e.target as HTMLButtonElement\n//   if (target.dataset?.cmdName == null) {\n//     console.error('Failed removing command - command name found.')\n//   }\n// }\n\nfunction buildReadonlyFormGroup (fieldName: string, labelName: string, label: string, text: string): HTMLDivElement {\n  const fg = buildFormGroup()\n  fg.dataset.fieldName = fieldName\n  const labelElem = HtmlHelpers.buildLabel(labelName, label)\n  const spanElem = HtmlHelpers.buildSpan(text, ['fieldValue'])\n  fg.append(labelElem, spanElem)\n  return fg\n}\n\nfunction mapCommandToForm (cmd: SoundCommand, index: number): HTMLFormElement {\n  if (CommandTypes?.value == null) {\n    throw Error('Unable to map command rows - no command types are loaded.')\n  }\n\n  if (SoundCues?.value == null) {\n    throw Error('Unable to map command rows - no sound cues are loaded.')\n  }\n\n  console.log(JSON.stringify(cmd))\n\n  const rowDiv = HtmlHelpers.buildForm(`commandForm-${cmd.id}`, null, [])\n  rowDiv.dataset.id = cmd.id.toString()\n  rowDiv.dataset.commandName = cmd.commandName\n  rowDiv.dataset.index = index.toString()\n  rowDiv.dataset.editing = 'false'\n\n  const newFormRow = HtmlHelpers.buildDiv(`cmd-row-${cmd.commandName}`, [CSSClasses.commandFormRow])\n\n  // enable/disable button\n  let fg = buildFormGroup([CSSClasses.middle])\n  fg.dataset.fieldName = 'enabled'\n  let btn = buildEnableButton(cmd.enabled, cmd.commandName)\n  fg.appendChild(btn)\n  newFormRow.appendChild(fg)\n\n  fg = buildFormGroup([CSSClasses.middle])\n  fg.dataset.fieldName = 'id'\n  const span = HtmlHelpers.buildSpan(cmd.id.toString())\n  fg.appendChild(span)\n  newFormRow.appendChild(fg)\n\n  // command name field\n  fg = buildReadonlyFormGroup('name', 'commandName', 'Name', cmd.commandName)\n  newFormRow.appendChild(fg)\n\n  // cooldown field\n  const txt = (cmd.coolDownMs != null) ? `${cmd.coolDownMs} ms` : 'None'\n  fg = buildReadonlyFormGroup('cooldown', 'coolDownMs', 'Cooldown', txt)\n  newFormRow.appendChild(fg)\n\n  // command type field\n  fg = buildReadonlyFormGroup('type', 'commandType', 'Type', cmd.commandType)\n  newFormRow.appendChild(fg)\n\n  // mapped cues\n  const cueTxt = cmd.mappedCues.length <= 0 ? 'None' : cmd.mappedCues.join(', ')\n  fg = buildReadonlyFormGroup('cues', 'mappedCues', 'Cues', cueTxt)\n  newFormRow.appendChild(fg)\n\n  // edit button\n  fg = buildFormGroup([CSSClasses.middle])\n  fg.dataset.fieldName = 'edit'\n  btn = HtmlHelpers.buildButton('', 'Edit', [])\n  btn.onclick = onEditButtonClick\n  fg.appendChild(btn)\n  newFormRow.appendChild(fg)\n\n  // add the row to the form\n  rowDiv.appendChild(newFormRow)\n  return rowDiv\n}\n\nfunction initializeSoundCueForms (config: SoundCommandList): void {\n  const mapPanel = document.getElementById(ElementIDs.cueConfigPanel)\n  if (mapPanel == null) {\n    console.error('Unable to locate panel, skipping form initialization.')\n    return\n  }\n  const rows = config.map(mapCommandToForm)\n  mapPanel.append(...rows)\n}\n\nfunction updateValueElem (fg: HTMLDivElement, value: string): void {\n  const selector = '.fieldValue'\n  const fv = fg.querySelector(selector) as HTMLInputElement | HTMLSpanElement | HTMLSelectElement\n  if (fv != null) {\n    if (fv.tagName === 'span') {\n      (fv as HTMLSpanElement).innerText = value\n    } else if (fv.tagName === 'input') {\n      (fv as HTMLInputElement).value = value\n    } else if (fv.tagName === 'select') {\n      (fv as HTMLSelectElement).value = value\n    }\n  }\n}\n\nfunction updateSoundCueForms (newConfig: SoundCommandList, oldConfig: SoundCommandList): void {\n  const mapPanel = document.getElementById(ElementIDs.cueConfigPanel)\n  if (mapPanel == null) {\n    console.error('Unable to locate panel, skipping form update.')\n    return\n  }\n  const foundIds = []\n  for (let i = 0; i < newConfig.length; i++) {\n    const cfg = newConfig[i]\n    foundIds.push(cfg.id)\n    // let hasChanges = false\n    const oldCfg = (i < oldConfig.length) ? oldConfig[i] : null\n    const form = document.querySelector(`form[data-id='${cfg.id}']`) as HTMLFormElement\n\n    if (oldCfg != null) {\n      if (oldCfg.allCuesAreValid !== cfg.allCuesAreValid) {\n        // hasChanges = true\n      }\n      if (oldCfg.lastUseTimestamp !== cfg.lastUseTimestamp) {\n        // hasChanges = true\n      }\n      if (oldCfg.commandName !== cfg.commandName) {\n        // hasChanges = true\n        const fg = form.querySelector('div.formGroup[data-field-name=\"name\"]') as HTMLDivElement\n        if (fg != null) {\n          updateValueElem(fg, cfg.commandName)\n        }\n      }\n      if (oldCfg.commandType !== cfg.commandType) {\n        // hasChanges = true\n        const fg = form.querySelector('div.formGroup[data-field-name=\"type\"]') as HTMLDivElement\n        if (fg != null) {\n          updateValueElem(fg, cfg.commandType)\n        }\n      }\n      if (oldCfg.commandUsageCount !== cfg.commandUsageCount) {\n        // hasChanges = true\n      }\n      if (oldCfg.coolDownMs !== cfg.coolDownMs) {\n        // hasChanges = true\n        const fg = form.querySelector('div.formGroup[data-field-name=\"cooldown\"]') as HTMLDivElement\n        if (fg != null) {\n          updateValueElem(fg, (cfg.coolDownMs != null) ? cfg.coolDownMs.toString() : '0')\n        }\n      }\n      if (oldCfg.enabled !== cfg.enabled) {\n        // hasChanges = true\n        const fg = form.querySelector('div.formGroup[data-field-name=\"enabled\"]') as HTMLDivElement\n        if (fg != null) {\n          const btn = fg.querySelector('button') as HTMLButtonElement\n          btn.dataset.enabled = cfg.enabled.toString()\n          if (cfg.enabled) {\n            btn.innerText = 'On'\n            btn.classList.add(CSSClasses.enabled)\n          } else {\n            btn.innerText = 'Off'\n            btn.classList.remove(CSSClasses.enabled)\n          }\n        }\n      }\n      if (oldCfg.orderedMappingIndex !== cfg.orderedMappingIndex) {\n        // hasChanges = true\n      }\n      if (oldCfg.id !== cfg.id) {\n        // hasChanges = true\n      }\n      const oldCues = oldCfg.mappedCues\n      const newCues = cfg.mappedCues\n      if ((oldCues.length !== newCues.length) || !newCues.every((c, idx) => c === oldCues[idx])) {\n        // hasChanges = true\n        const fg = form.querySelector('div.formGroup[data-field-name=\"cues\"]') as HTMLDivElement\n        if (form.dataset.editing != null) {\n          // if we're editing, just delete all the old dropdowns\n          const cueLists = getCueOptionsList(newCues)\n          const cueElems = cueLists.map((c) => {\n            return HtmlHelpers.buildSelect(['fieldValue'], 'mappedCues', c)\n          })\n          removeValueElem(fg)\n          fg.append(...cueElems)\n        } else {\n          if (fg != null) {\n            updateValueElem(fg, newCues.join(', '))\n          }\n        }\n      }\n    } else {\n      const row = mapCommandToForm(cfg, i)\n      mapPanel.append(row)\n    }\n  }\n}\n\nfunction teardownSoundCueForms (): void {\n  const mapPanel = document.getElementById(ElementIDs.cueConfigPanel)\n  if (mapPanel == null) {\n    console.error('Unable to locate panel, skipping form teardown.')\n  }\n}\n\nfunction onSoundCommandConfigChange (newConfig: SoundCommandList, oldConfig: SoundCommandList): void {\n  if (!Array.isArray(newConfig)) {\n    console.error('No config was provided, skipping form render.')\n    return\n  }\n\n  if (newConfig != null && oldConfig == null) {\n    // create from scratch\n    initializeSoundCueForms(newConfig)\n  } else if (newConfig != null && oldConfig == null) {\n    // update the dom\n    updateSoundCueForms(newConfig, oldConfig)\n  } else if (newConfig != null && oldConfig == null) {\n    // tear down the forms\n    teardownSoundCueForms()\n  }\n};\n\nfunction setupSoundCueConfigForm (): void {\n  NodeCG.waitForReplicants(CommandConfig, CommandTypes, SoundCues)\n    .then(() => {\n      CommandConfig.on(ReplicantEvents.change, onSoundCommandConfigChange)\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n}\n\ndocument.addEventListener('DOMContentLoaded', setupSoundCueConfigForm)\n"],"names":["$c9667c13806cac9b$export$2e2bcd8739ae039","name","text","classes","button","document","createElement","length","classList","add","innerText","forName","label","htmlFor","value","input","type","options","select","forEach","opt","o","selected","span","id","div","form","$00ac697320bc0dea$export$501f6df0ab3ca018","SoundAlertReplicants","$f6050c0f5fd2d3f8$var$ReplicantEvents","$f6050c0f5fd2d3f8$export$2e2bcd8739ae039","$14bce57df13bef4b$export$1112fe37bc980be0","CSSClasses","$14bce57df13bef4b$export$d0ba48f9ed05b63c","$8fd10160d14e935e$var$CommandConfig","nodecg","Replicant","soundCueConfig","$8fd10160d14e935e$var$CommandTypes","soundCueTypes","$8fd10160d14e935e$var$SoundCues","soundCueList","$8fd10160d14e935e$var$getCommandConfigById","Error","foundCommand","find","c","$8fd10160d14e935e$var$getTypeOptions","defaultValue","reduce","prev","curr","push","$8fd10160d14e935e$var$getCueOptionsList","mappedCues","cues","cueOptionLists","map","soundCues","$8fd10160d14e935e$var$getCueOptions","$8fd10160d14e935e$var$onEnableButtonClicked","e","preventDefault","console","error","target","dataset","cmdName","commandName","enabled","$8fd10160d14e935e$var$removeValueElem","fg","fvs","querySelectorAll","v","fieldToRemove","removeChild","$8fd10160d14e935e$var$onEditCancelClick","event","closest","parseInt","formGroups","fieldValueClass","x","fieldName","nameInput","buildSpan","appendChild","cooldownVal","coolDownMs","toString","cooldownInput","typeInput","commandType","cueElem","join","append","editButton","buildButton","onclick","$8fd10160d14e935e$var$onEditButtonClick","replaceChildren","editing","buildTextInput","buildNumberInput","typeOptions","buildSelect","cueElems","saveButton","btnAdd","cancelButton","deleteButton","btnRemove","$8fd10160d14e935e$var$buildFormGroup","extraClasses","formGroup","concat","buildDiv","undefined","$8fd10160d14e935e$var$buildReadonlyFormGroup","labelName","labelElem","buildLabel","spanElem","$8fd10160d14e935e$var$mapCommandToForm","cmd","index","log","JSON","stringify","rowDiv","buildForm","newFormRow","commandFormRow","middle","btn","txt","btnToggleEnabled","$8fd10160d14e935e$var$buildEnableButton","$8fd10160d14e935e$var$updateValueElem","fv","querySelector","tagName","$8fd10160d14e935e$var$onSoundCommandConfigChange","newConfig","oldConfig","Array","isArray","config","mapPanel","getElementById","cueConfigPanel","rows","$8fd10160d14e935e$var$initializeSoundCueForms","foundIds","i","cfg","oldCfg","allCuesAreValid","lastUseTimestamp","commandUsageCount","remove","orderedMappingIndex","oldCues","newCues","every","idx","row","$8fd10160d14e935e$var$updateSoundCueForms","addEventListener","NodeCG","waitForReplicants","then","on","change","catch","err"],"version":3,"file":"index.a496f691.js.map"}