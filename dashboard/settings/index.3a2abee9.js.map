{"mappings":"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","sources":["src/dashboard/settings/HtmlHelpers.ts","src/types/SoundAlertReplicants.d.ts","src/types/ReplicantEvents.d.ts","src/dashboard/settings/types.d.ts","src/dashboard/settings/index.ts"],"sourcesContent":["function buildDiv(id?: string, classes?: string[]) {\n    const div = document.createElement(\"div\") as HTMLDivElement;\n    if (classes && classes.length > 0){\n        div.classList.add(...classes);\n    }\n    if (id) {\n        div.id = id;\n    }\n    return div;\n}\n\nfunction buildHiddenInput(name: string, value: string) {\n    const input = document.createElement(\"input\") as HTMLInputElement;\n    input.type = \"hidden\";\n    input.name = name;\n    input.value = value;\n    return input;\n}\n\nfunction buildButton(name : string, text: string, classes?: string[], ) {\n    const button = document.createElement(\"button\") as HTMLButtonElement;\n    if (classes && classes.length > 0){\n        button.classList.add(...classes);\n    }\n    button.name = name;\n    button.innerText = text;\n    return button;\n}\n\nfunction buildLabel(forName: string, text: string, classes?: string[]) {\n    const label = document.createElement(\"label\") as HTMLLabelElement;\n    if (classes && classes.length > 0){\n        label.classList.add(...classes);\n    }\n    label.htmlFor = forName;\n    label.innerText = text;\n    return label;\n}\n\nfunction buildSpan(text: string, classes?: string[]) {\n    const span = document.createElement(\"span\") as HTMLSpanElement;\n    if (classes && classes.length > 0){\n        span.classList.add(...classes);\n    }\n    span.innerText = text;\n    return span;\n}\n\nfunction buildTextInput(name: string, value: string, classes?: string[]) {\n    const input = document.createElement(\"input\") as HTMLInputElement;\n    if (classes && classes.length > 0){\n        input.classList.add(...classes);\n    }\n    input.type = \"text\";\n    input.name = name;\n    input.value = value;\n    return input;\n}\n\nfunction buildNumberInput(name: string, value: string, classes?: string[]) {\n    const input = document.createElement(\"input\") as HTMLInputElement;\n    if (classes && classes.length > 0){\n        input.classList.add(...classes);\n    }\n    input.type = \"number\";\n    input.name = name;\n    input.value = value;\n    return input;\n}\n\nexport type SelectInputDataElem = {\n    label: string;\n    value: string;\n    selected: boolean;\n}\n\nfunction buildSelect(classes : string[], name: string, options: SelectInputDataElem[]){\n    const select = document.createElement(\"select\") as HTMLSelectElement;\n    if (classes && classes.length > 0){\n       select.classList.add(...classes);\n    }\n    select.name = name;\n    options.forEach((opt) => {\n        const o = document.createElement(\"option\") as HTMLOptionElement;\n        o.value = opt.value;\n        o.innerText = opt.label;\n        o.selected = opt.selected;\n        select.add(o);\n    })\n    return select;\n}\n\nfunction buildForm(name: string | null, id: string | null, classes: CSSClasses[]) {\n    const form = document.createElement(\"form\") as HTMLFormElement;\n    if (name) {\n        form.name = name;\n    }\n    if (id) {\n        form.id = id;\n    }\n    if (classes && classes.length > 0) {\n        form.classList.add(...classes);\n    }\n    return form;\n}\n\nexport default {\n    buildButton,\n    buildLabel,\n    buildTextInput,\n    buildSelect,\n    buildHiddenInput,\n    buildSpan,\n    buildDiv,\n    buildNumberInput,\n    buildForm\n}","export enum SoundAlertReplicants {\n    soundCueConfig = \"soundCueConfig\",\n    soundCuesEnabled = \"soundCuesEnabled\",\n    soundCueList = \"soundCueList\",\n    soundCueLog = \"soundCueLog\",\n    soundCueTypes = \"soundCueTypes\",\n    soundCueCommandIndex = \"soundCueCommandIndex\",\n    nodeCGServerSoundCues = \"soundCues\" // this is for the extension to get the defined cues\n}\n\nexport type SoundCueNameList = string[];\n","enum ReplicantEvents {\n    change = \"change\"\n}\n\nexport default ReplicantEvents","\nexport enum CSSClasses {\n    commandFormRow = \"commandFormRow\",\n    btnRemove = \"btnRemove\",\n    btnAdd = \"btnAdd\",\n    formGroup = \"formGroup\",\n    middle = \"middle\",\n    btnToggleEnabled = \"btnToggleEnabled\",\n    enabled = \"enabled\",\n    readOnly = \"readOnly\",\n    hidden = \"hidden\",\n    cueSelectWrapper = \"cueSelectWrapper\"\n};\n\nexport enum ElementIDs {\n    cueConfigPanel = \"cueConfigPanel\"\n};\n\nexport type ConfigFormState = {\n    editingRows: number[],\n    submittingRows: number[],\n    rowErrors: Record<number, string>,\n    rendered: boolean,\n    commandTypeOptions: SoundCommandType[]\n}","import HtmlHelpers from \"./HtmlHelpers\";\nimport { SoundAlertReplicants, SoundCueNameList } from \"../../types/SoundAlertReplicants.d\";\nimport SoundCommandType from \"../../types/SoundCommandType.d\";\nimport ReplicantEvents from \"../../types/ReplicantEvents.d\";\nimport { ElementIDs, CSSClasses, ConfigFormState } from \"./types.d\";\n\nconst CommandConfig = nodecg.Replicant<SoundCommandList>(SoundAlertReplicants.soundCueConfig);\nconst CommandTypes = nodecg.Replicant<SoundCommandType[]>(SoundAlertReplicants.soundCueTypes);\nconst SoundCues = nodecg.Replicant<SoundCueNameList>(SoundAlertReplicants.soundCueList);\n\nconst CommandFormState : ConfigFormState = {\n    editingRows: [],\n    submittingRows: [],\n    rowErrors: {},\n    rendered: false,\n    commandTypeOptions: [],\n}\n\n/**\n * Mouse click event for the enable/disable button.\n * Apply changes to config instantly.\n * @param e button click event\n */\nfunction onEnableButtonClicked(e: MouseEvent) {\n    e.preventDefault();\n    if (!CommandConfig || !CommandConfig.value) {\n        console.error(\"Failed enabling/disabling sound alert - replicant not available.\");\n        return;\n    }\n    if (!e.target) {\n        console.error(\"Failed enabling/disabling sound alert - no event target found.\")\n        return;\n    }\n    const target = e.target as HTMLButtonElement;\n    if (!target.dataset.cmdName) {\n        console.error(\"Failed enabling/disabling sound alert - command name found.\")\n        return;\n    }\n\n    const cmdName = target.dataset.cmdName;\n    const foundCommand = CommandConfig.value.find((c) => c.commandName === cmdName);\n    if (!foundCommand) {\n        console.error(`Failed enabling/disabling sound alert - command matching \"${cmdName}\" not found.`)\n        return;\n    }\n    \n    // check the target's dataset prop.\n    const enabled = (target.dataset.enabled === \"true\");    \n    \n    // this will trigger a re-render\n    foundCommand.enabled = !enabled;\n}\n\n\nfunction removeValueElem(fg: HTMLDivElement) {\n    const selector = \".fieldValue\";\n    const fvs = fg.querySelectorAll(selector);\n    if (fvs && fvs.length > 0) {\n        for (let v = 0; v < fvs.length; v++) {\n            const fieldToRemove = fvs[v];\n            fg.removeChild(fieldToRemove);\n        }\n    }\n}\n\nfunction onEditButtonClick(event: MouseEvent) {\n    event.preventDefault();\n    if (!CommandConfig || !CommandConfig.value) {\n        console.error(\"Failed sound alert edit - config replicant not available.\");\n        return;\n    }\n\n    if (!CommandTypes || !CommandTypes.value) {\n        console.error(\"Failed sound alert edit - type replicant not available.\");\n        return;\n    }\n\n    if (!SoundCues || !SoundCues.value) {\n        console.error(\"Failed sound alert edit - sound cue replicant not available.\");\n        return;\n    }\n\n    if (!event.target) {\n        console.error(\"Failed sound alert edit - no event target found.\");\n        return;\n    }\n\n    const target = event.target as HTMLButtonElement;\n    const form = target.closest(\"form\") as HTMLFormElement;\n    if (!form) {\n        console.error(\"Failed sound alert edit - unable to locate form.\");\n        return;\n    }\n\n    const id = form.dataset.id ? parseInt(form.dataset.id) : -1;\n    if (id < 0) {\n        console.error(\"Failed sound alert edit - no ID found.\");\n        return;\n    }\n\n    const formGroups = form.querySelectorAll(\"div.formGroup\");\n    if (formGroups.length <= 0) {\n        console.error(\"Failed sound alert edit - unable to locate form groups.\");\n        return;\n    }\n\n    const foundCommand = CommandConfig.value.find((c) => c.id === id);\n    if (!foundCommand) {\n        console.error(`Failed sound alert edit - command matching ID \"${id}\" not found.`)\n        return;\n    }\n\n    for (let x = 0; x < formGroups.length; x++) {\n        const fg = formGroups[x] as HTMLDivElement;\n        switch (fg.dataset.fieldName) {\n            case 'name':\n                const nameInput = HtmlHelpers.buildTextInput(\"commandName\", foundCommand.commandName);\n                nameInput.disabled = true;\n                fg.replaceChildren(nameInput);\n                break;\n            case 'cooldown':\n                const cooldownVal = foundCommand.coolDownMs ? foundCommand.coolDownMs.toString() : \"0\";\n                const cooldownInput = HtmlHelpers.buildNumberInput(\"cooldownMs\", cooldownVal);\n                cooldownInput.disabled = true;\n                removeValueElem(fg);\n                fg.appendChild(cooldownInput);\n                break;\n            case 'type':\n                const typeOptions = CommandTypes.value.map((c) => {\n                    return {\n                        label: c,\n                        value: c,\n                        selected: foundCommand.commandType === c,\n                    }\n                });\n                const typeInput = HtmlHelpers.buildSelect([], \"commandType\", typeOptions);\n                typeInput.disabled = true;\n                removeValueElem(fg);\n                fg.appendChild(typeInput);\n                break;\n            case 'cues':\n                const cueOptions = SoundCues.value.map((c) => {\n                    return {\n                        label: c,\n                        value: c,\n                        selected: foundCommand.mappedCues.includes(c)\n                    }\n                })\n                const cueInput = HtmlHelpers.buildSelect([], \"commandType\", cueOptions);\n                cueInput.disabled = true;\n                removeValueElem(fg);\n                fg.appendChild(cueInput);\n                break;\n            case 'edit':\n                const saveButton = HtmlHelpers.buildButton(\"btnSave\", \"Save\", [ CSSClasses.btnAdd, ]);\n                saveButton.disabled = true;\n                const cancelButton = HtmlHelpers.buildButton(\"btnCancel\", \"Cancel\", []);\n                cancelButton.disabled = true;\n                const deleteButton = HtmlHelpers.buildButton(\"btnDelete\", \"Delete\", [ CSSClasses.btnRemove ]);\n                deleteButton.disabled = true;\n                fg.replaceChildren(saveButton, cancelButton, deleteButton);\n                break;\n            default:\n                break;\n        }\n    }\n\n\n}\n\nfunction onEditStarting(commandId: string) {\n\n}\n\nfunction buildEnableButton(enabled: boolean, commandName: string) {\n    let txt = enabled ? 'On' : \"Off\";\n    const btn = HtmlHelpers.buildButton(\"btnEnabled\", txt, [CSSClasses.btnToggleEnabled]);\n    if (enabled) {\n        btn.classList.add(CSSClasses.enabled);\n    }\n    btn.onclick = onEnableButtonClicked;\n    btn.dataset.cmdName = commandName;\n    btn.dataset.enabled = enabled.toString();\n    return btn;\n}\n\nfunction buildFormGroup(extraClasses?: CSSClasses[]) {\n    let classes = [ CSSClasses.formGroup, ]\n    if (extraClasses) {\n        classes = classes.concat(extraClasses)\n    }\n    const elem = HtmlHelpers.buildDiv(undefined, classes);\n    return elem;\n}\n\nfunction btnRemoveClick(e: MouseEvent) {\n    e.preventDefault();\n    if (!CommandConfig || !CommandConfig.value) {\n        console.error(\"Failed removing command - replicant not available.\");\n        return;\n    }\n    if (!e.target) {\n        console.error(\"Failed removing command - no event target found.\")\n        return;\n    }\n    const target = e.target as HTMLButtonElement;\n    if (!target.dataset.cmdName) {\n        console.error(\"Failed removing command - command name found.\")\n        return;\n    }\n}\n\nfunction buildReadonlyFormGroup(fieldName: string, labelName: string, label: string, text: string) {\n    const fg = buildFormGroup();\n    fg.dataset.fieldName = fieldName;\n    let labelElem = HtmlHelpers.buildLabel(labelName, label);\n    const spanElem = HtmlHelpers.buildSpan(text, ['fieldValue']);\n    fg.append(labelElem, spanElem);\n    return fg;\n}\n\n\nfunction mapCommandToForm(cmd: SoundCommand, index: number) { \n    if (!CommandTypes || !CommandTypes.value) {\n        throw Error(\"Unable to map command rows - no command types are loaded.\");\n    }\n\n    if (!SoundCues || !SoundCues.value) {\n        throw Error(\"Unable to map command rows - no sound cues are loaded.\");\n    }\n\n    console.log(JSON.stringify(cmd));\n\n    const rowDiv = HtmlHelpers.buildForm(`commandForm-${cmd.id}`, null, []);\n    rowDiv.dataset.id = cmd.id.toString();\n    rowDiv.dataset.commandName = cmd.commandName;    \n    rowDiv.dataset.index = index.toString();\n\n    const newFormRow = HtmlHelpers.buildDiv(`cmd-row-${cmd.commandName}`, [ CSSClasses.commandFormRow, ]);\n\n    // enable/disable button\n    let fg = buildFormGroup([CSSClasses.middle]);\n    let btn = buildEnableButton(cmd.enabled, cmd.commandName);\n    fg.appendChild(btn);\n    newFormRow.appendChild(fg)\n\n    fg = buildFormGroup([CSSClasses.middle]);\n    let span = HtmlHelpers.buildSpan(cmd.id.toString());\n    fg.appendChild(span);\n    newFormRow.appendChild(fg);\n\n    // command name field\n    fg = buildReadonlyFormGroup(\"name\", \"commandName\", \"Name\", cmd.commandName);\n    newFormRow.appendChild(fg);\n\n    // cooldown field\n    let txt = cmd.coolDownMs ? `${cmd.coolDownMs} ms` : \"None\";\n    fg = buildReadonlyFormGroup(\"cooldown\", \"coolDownMs\", \"Cooldown\", txt);\n    newFormRow.appendChild(fg);\n\n    // command type field\n    fg = buildReadonlyFormGroup(\"type\", \"commandType\", \"Type\", cmd.commandType);\n    newFormRow.appendChild(fg)\n\n    // mapped cues\n    const cueTxt = cmd.mappedCues.length <= 0 ? \"None\" : cmd.mappedCues.join(\", \");\n    fg = buildReadonlyFormGroup(\"cues\", \"mappedCues\", \"Cues\", cueTxt);\n    newFormRow.appendChild(fg)\n\n    // edit button\n    fg = buildFormGroup([CSSClasses.middle]);\n    fg.dataset.fieldName = \"edit\";\n    btn = HtmlHelpers.buildButton(\"\",\"Edit\", []);\n    btn.onclick = onEditButtonClick;\n    fg.appendChild(btn);\n    newFormRow.appendChild(fg);\n\n    // add the row to the form\n    rowDiv.appendChild(newFormRow);\n    return rowDiv;\n}\n\nfunction initializeSoundCueForms(config : SoundCommandList) {\n    const mapPanel = document.getElementById(ElementIDs.cueConfigPanel);\n    if (!mapPanel) {\n        console.error(\"Unable to locate panel, skipping form initialization.\")\n        return;\n    }\n    const rows = config.map(mapCommandToForm);\n    mapPanel.append(...rows);\n}\n\nfunction updateSoundCueForms(newConfig : SoundCommandList, oldConfig: SoundCommandList) {\n    const mapPanel = document.getElementById(ElementIDs.cueConfigPanel);\n    if (!mapPanel) {\n        console.error(\"Unable to locate panel, skipping form update.\")\n        return;\n    }\n}\n\nfunction teardownSoundCueForms() {\n    const mapPanel = document.getElementById(ElementIDs.cueConfigPanel);\n    if (!mapPanel) {\n        console.error(\"Unable to locate panel, skipping form teardown.\")\n        return;\n    }\n}\n\nfunction onSoundCommandConfigChange(newConfig: SoundCommandList, oldConfig: SoundCommandList) {\n    if (!Array.isArray(newConfig))  {\n        console.error(\"No config was provided, skipping form render.\")\n        return;\n    }\n\n    if (newConfig && !oldConfig) {\n        // create from scratch\n        initializeSoundCueForms(newConfig);\n    } else if (newConfig && oldConfig) {\n        // update the dom\n        updateSoundCueForms(newConfig, oldConfig);\n    } else if (!newConfig && oldConfig) {\n        // tear down the forms\n        teardownSoundCueForms();\n    }\n};\n\n\nfunction setupSoundCueConfigForm(){\n    NodeCG.waitForReplicants(CommandConfig, CommandTypes, SoundCues)\n    .then(() => {\n        CommandConfig.on(ReplicantEvents.change, onSoundCommandConfigChange);\n    });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", setupSoundCueConfigForm);"],"names":["$c9667c13806cac9b$export$2e2bcd8739ae039","name","text","classes","button","document","createElement","length","classList","add","innerText","forName","label","htmlFor","value","input","type","options","select","forEach","opt","o","selected","span","id","div","form","$9f616eee726af400$export$501f6df0ab3ca018","SoundAlertReplicants","$ad119dc852be40ec$var$ReplicantEvents","$ad119dc852be40ec$export$2e2bcd8739ae039","$14bce57df13bef4b$export$1112fe37bc980be0","CSSClasses","$14bce57df13bef4b$export$d0ba48f9ed05b63c","$8fd10160d14e935e$var$CommandConfig","nodecg","Replicant","soundCueConfig","$8fd10160d14e935e$var$CommandTypes","soundCueTypes","$8fd10160d14e935e$var$SoundCues","soundCueList","$8fd10160d14e935e$var$onEnableButtonClicked","e","preventDefault","console","error","target","dataset","cmdName","foundCommand","find","c","commandName","enabled","$8fd10160d14e935e$var$removeValueElem","fg","fvs","querySelectorAll","v","fieldToRemove","removeChild","$8fd10160d14e935e$var$onEditButtonClick","event","closest","parseInt","formGroups","x","fieldName","nameInput","buildTextInput","disabled","replaceChildren","cooldownVal","coolDownMs","toString","cooldownInput","buildNumberInput","appendChild","typeOptions","map","commandType","typeInput","buildSelect","cueOptions","mappedCues","includes","cueInput","saveButton","buildButton","btnAdd","cancelButton","deleteButton","btnRemove","$8fd10160d14e935e$var$buildFormGroup","extraClasses","formGroup","concat","buildDiv","undefined","$8fd10160d14e935e$var$buildReadonlyFormGroup","labelName","labelElem","buildLabel","spanElem","buildSpan","append","$8fd10160d14e935e$var$mapCommandToForm","cmd","index","Error","log","JSON","stringify","rowDiv","buildForm","newFormRow","commandFormRow","middle","btn","txt","btnToggleEnabled","onclick","$8fd10160d14e935e$var$buildEnableButton","join","$8fd10160d14e935e$var$onSoundCommandConfigChange","newConfig","oldConfig","Array","isArray","config","mapPanel","getElementById","cueConfigPanel","rows","$8fd10160d14e935e$var$initializeSoundCueForms","addEventListener","NodeCG","waitForReplicants","then","on","change"],"version":3,"file":"index.3a2abee9.js.map"}