{"mappings":"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","sources":["src/dashboard/settings/HtmlHelpers.ts","src/types/SoundAlertReplicants.d.ts","src/types/ReplicantEvents.d.ts","src/dashboard/settings/types.d.ts","src/dashboard/settings/index.ts"],"sourcesContent":["function buildDiv(id?: string, classes?: string[]) {\n    const div = document.createElement(\"div\") as HTMLDivElement;\n    if (classes && classes.length > 0){\n        div.classList.add(...classes);\n    }\n    if (id) {\n        div.id = id;\n    }\n    return div;\n}\n\nfunction buildHiddenInput(name: string, value: string) {\n    const input = document.createElement(\"input\") as HTMLInputElement;\n    input.type = \"hidden\";\n    input.name = name;\n    input.value = value;\n    return input;\n}\n\nfunction buildButton(name : string, text: string, classes?: string[], ) {\n    const button = document.createElement(\"button\") as HTMLButtonElement;\n    if (classes && classes.length > 0){\n        button.classList.add(...classes);\n    }\n    button.name = name;\n    button.innerText = text;\n    return button;\n}\n\nfunction buildLabel(forName: string, text: string, classes?: string[]) {\n    const label = document.createElement(\"label\") as HTMLLabelElement;\n    if (classes && classes.length > 0){\n        label.classList.add(...classes);\n    }\n    label.htmlFor = forName;\n    label.innerText = text;\n    return label;\n}\n\nfunction buildSpan(text: string, classes?: string[]) {\n    const span = document.createElement(\"span\") as HTMLSpanElement;\n    if (classes && classes.length > 0){\n        span.classList.add(...classes);\n    }\n    span.innerText = text;\n    return span;\n}\n\nfunction buildTextInput(name: string, value: string, classes?: string[]) {\n    const input = document.createElement(\"input\") as HTMLInputElement;\n    if (classes && classes.length > 0){\n        input.classList.add(...classes);\n    }\n    input.type = \"text\";\n    input.name = name;\n    input.value = value;\n    return input;\n}\n\nfunction buildNumberInput(name: string, value: string, classes?: string[]) {\n    const input = document.createElement(\"input\") as HTMLInputElement;\n    if (classes && classes.length > 0){\n        input.classList.add(...classes);\n    }\n    input.type = \"number\";\n    input.name = name;\n    input.value = value;\n    return input;\n}\n\nexport type SelectInputDataElem = {\n    label: string;\n    value: string;\n    selected: boolean;\n}\n\nfunction buildSelect(classes : string[], name: string, options: SelectInputDataElem[]){\n    const select = document.createElement(\"select\") as HTMLSelectElement;\n    if (classes && classes.length > 0){\n       select.classList.add(...classes);\n    }\n    select.name = name;\n    options.forEach((opt) => {\n        const o = document.createElement(\"option\") as HTMLOptionElement;\n        o.value = opt.value;\n        o.innerText = opt.label;\n        o.selected = opt.selected;\n        select.add(o);\n    })\n    return select;\n}\n\nfunction buildForm(name: string | null, id: string | null, classes: CSSClasses[]) {\n    const form = document.createElement(\"form\") as HTMLFormElement;\n    if (name) {\n        form.name = name;\n    }\n    if (id) {\n        form.id = id;\n    }\n    if (classes && classes.length > 0) {\n        form.classList.add(...classes);\n    }\n    return form;\n}\n\n\nexport default {\n    buildButton,\n    buildLabel,\n    buildTextInput,\n    buildSelect,\n    buildHiddenInput,\n    buildSpan,\n    buildDiv,\n    buildNumberInput,\n    buildForm\n}","export enum SoundAlertReplicants {\n    soundCueConfig = \"soundCueConfig\",\n    soundCuesEnabled = \"soundCuesEnabled\",\n    soundCueList = \"soundCueList\",\n    soundCueLog = \"soundCueLog\",\n    soundCueTypes = \"soundCueTypes\",\n    soundCueCommandIndex = \"soundCueCommandIndex\",\n    nodeCGServerSoundCues = \"soundCues\" // this is for the extension to get the defined cues\n}\n\nexport type SoundCueNameList = string[];\n","enum ReplicantEvents {\n    change = \"change\"\n}\n\nexport default ReplicantEvents","\nexport enum CSSClasses {\n    commandFormRow = \"commandFormRow\",\n    btnRemove = \"btnRemove\",\n    btnAdd = \"btnAdd\",\n    formGroup = \"formGroup\",\n    middle = \"middle\",\n    btnToggleEnabled = \"btnToggleEnabled\",\n    enabled = \"enabled\",\n    readOnly = \"readOnly\",\n    hidden = \"hidden\",\n    cueSelectWrapper = \"cueSelectWrapper\"\n};\n\nexport enum ElementIDs {\n    cueConfigPanel = \"cueConfigPanel\"\n};\n\nexport type ConfigFormState = {\n    editingRows: number[],\n    submittingRows: number[],\n    rowErrors: Record<number, string>,\n    rendered: boolean,\n    commandTypeOptions: SoundCommandType[]\n}","import HtmlHelpers from \"./HtmlHelpers\";\nimport { SoundAlertReplicants, SoundCueNameList } from \"../../types/SoundAlertReplicants.d\";\nimport SoundCommandType from \"../../types/SoundCommandType.d\";\nimport ReplicantEvents from \"../../types/ReplicantEvents.d\";\nimport { ElementIDs, CSSClasses, ConfigFormState } from \"./types.d\";\n\nconst CommandConfig = nodecg.Replicant<SoundCommandList>(SoundAlertReplicants.soundCueConfig);\nconst CommandTypes = nodecg.Replicant<SoundCommandType[]>(SoundAlertReplicants.soundCueTypes);\nconst SoundCues = nodecg.Replicant<SoundCueNameList>(SoundAlertReplicants.soundCueList);\n\nconst CommandFormState : ConfigFormState = {\n    editingRows: [],\n    submittingRows: [],\n    rowErrors: {},\n    rendered: false,\n    commandTypeOptions: [],\n}\n\n/**\n * Mouse click event for the enable/disable button.\n * Apply changes to config instantly.\n * @param e button click event\n */\nfunction onEnableButtonClicked(e: MouseEvent) {\n    e.preventDefault();\n    if (!CommandConfig || !CommandConfig.value) {\n        console.error(\"Failed enabling/disabling sound alert - replicant not available.\");\n        return;\n    }\n    if (!e.target) {\n        console.error(\"Failed enabling/disabling sound alert - no event target found.\")\n        return;\n    }\n    const target = e.target as HTMLButtonElement;\n    if (!target.dataset.cmdName) {\n        console.error(\"Failed enabling/disabling sound alert - command name found.\")\n        return;\n    }\n\n    const cmdName = target.dataset.cmdName;\n    const foundCommand = CommandConfig.value.find((c) => c.commandName === cmdName);\n    if (!foundCommand) {\n        console.error(`Failed enabling/disabling sound alert - command matching \"${cmdName}\" not found.`)\n        return;\n    }\n    \n    // check the target's dataset prop.\n    const enabled = (target.dataset.enabled === \"true\");    \n    \n    // this will trigger a re-render\n    foundCommand.enabled = !enabled;\n}\n\nfunction onEditStarting(commandId: string) {\n\n}\n\nfunction buildEnableButton(enabled: boolean, commandName: string) {\n    let txt = enabled ? 'On' : \"Off\";\n    const btn = HtmlHelpers.buildButton(\"btnEnabled\", txt, [CSSClasses.btnToggleEnabled]);\n    if (enabled) {\n        btn.classList.add(CSSClasses.enabled);\n    }\n    btn.onclick = onEnableButtonClicked;\n    btn.dataset.cmdName = commandName;\n    btn.dataset.enabled = enabled.toString();\n    return btn;\n}\n\nfunction buildFormGroup(extraClasses?: CSSClasses[]) {\n    let classes = [ CSSClasses.formGroup, ]\n    if (extraClasses) {\n        classes = classes.concat(extraClasses)\n    }\n    const elem = HtmlHelpers.buildDiv(undefined, classes);\n    return elem;\n}\n\nfunction btnRemoveClick(e: MouseEvent) {\n    e.preventDefault();\n    if (!CommandConfig || !CommandConfig.value) {\n        console.error(\"Failed removing command - replicant not available.\");\n        return;\n    }\n    if (!e.target) {\n        console.error(\"Failed removing command - no event target found.\")\n        return;\n    }\n    const target = e.target as HTMLButtonElement;\n    if (!target.dataset.cmdName) {\n        console.error(\"Failed removing command - command name found.\")\n        return;\n    }\n}\n\n\nfunction mapCommandToForm(cmd: SoundCommand, index: number) { \n    if (!CommandTypes || !CommandTypes.value) {\n        throw Error(\"Unable to map command rows - no command types are loaded.\");\n    }\n\n    if (!SoundCues || !SoundCues.value) {\n        throw Error(\"Unable to map command rows - no sound cues are loaded.\");\n    }\n\n    console.log(JSON.stringify(cmd));\n\n    const rowDiv = HtmlHelpers.buildForm(`commandForm-${cmd.id}`, null, []);\n    rowDiv.dataset.id = cmd.id.toString();\n    rowDiv.dataset.commandName = cmd.commandName;    \n    rowDiv.dataset.index = index.toString();\n\n    const newFormRow = HtmlHelpers.buildDiv(`cmd-row-${cmd.commandName}`, [ CSSClasses.commandFormRow, ]);\n\n    // enable/disable button\n    let fg = buildFormGroup([CSSClasses.middle]);\n    let btn = buildEnableButton(cmd.enabled, cmd.commandName);\n    fg.appendChild(btn);\n    newFormRow.appendChild(fg)\n\n    fg = buildFormGroup([CSSClasses.middle]);\n    let span = HtmlHelpers.buildSpan(cmd.id.toString());\n    fg.appendChild(span);\n    newFormRow.appendChild(fg)\n\n    // command name field\n    fg = buildFormGroup();\n    fg.dataset.fieldName = 'name';\n    let label = HtmlHelpers.buildLabel(\"commandName\", \"Name\");\n    span = HtmlHelpers.buildSpan(cmd.commandName);\n    fg.append(label, span);\n    newFormRow.appendChild(fg)\n\n    // cooldown field\n    fg = buildFormGroup();\n    fg.dataset.fieldName = \"cooldown\";\n    label = HtmlHelpers.buildLabel(\"coolDownMs\", \"Cooldown\");\n    span = HtmlHelpers.buildSpan(cmd.coolDownMs ? `${cmd.coolDownMs} ms` : \"None\");\n    fg.append(label, span);\n    newFormRow.appendChild(fg)\n\n    // command type field\n    fg = buildFormGroup();\n    fg.dataset.fieldName = \"type\";\n    label = HtmlHelpers.buildLabel(\"commandType\", \"Type\");\n    span = HtmlHelpers.buildSpan(cmd.commandType);\n    fg.append(label, span);\n    newFormRow.appendChild(fg)\n\n    // mapped cues\n    fg = buildFormGroup();\n    fg.dataset.fieldName = \"cues\";\n    label = HtmlHelpers.buildLabel(\"mappedCues\", \"Cues\");\n    if (cmd.mappedCues.length <= 0) {\n        span = HtmlHelpers.buildSpan(\"None\");\n    } else {\n        span = HtmlHelpers.buildSpan(cmd.mappedCues.join(\", \"));\n    }\n    fg.append(label, span);\n    newFormRow.appendChild(fg)\n\n    // edit button\n    fg = buildFormGroup([CSSClasses.middle]);\n    btn = HtmlHelpers.buildButton(\"\",\"Edit\", []);\n    fg.appendChild(btn);\n    newFormRow.appendChild(fg);\n\n    // add the row to the form\n    rowDiv.appendChild(newFormRow);\n    return rowDiv;\n}\n\nfunction initializeSoundCueForms(config : SoundCommandList) {\n    const mapPanel = document.getElementById(ElementIDs.cueConfigPanel);\n    if (!mapPanel) {\n        console.error(\"Unable to locate panel, skipping form initialization.\")\n        return;\n    }\n    const rows = config.map(mapCommandToForm);\n    mapPanel.append(...rows);\n}\n\nfunction updateSoundCueForms(newConfig : SoundCommandList, oldConfig: SoundCommandList) {\n    const mapPanel = document.getElementById(ElementIDs.cueConfigPanel);\n    if (!mapPanel) {\n        console.error(\"Unable to locate panel, skipping form update.\")\n        return;\n    }\n}\n\nfunction teardownSoundCueForms() {\n    const mapPanel = document.getElementById(ElementIDs.cueConfigPanel);\n    if (!mapPanel) {\n        console.error(\"Unable to locate panel, skipping form teardown.\")\n        return;\n    }\n}\n\nfunction onSoundCommandConfigChange(newConfig: SoundCommandList, oldConfig: SoundCommandList) {\n    if (!Array.isArray(newConfig))  {\n        console.error(\"No config was provided, skipping form render.\")\n        return;\n    }\n\n    if (newConfig && !oldConfig) {\n        // create from scratch\n        initializeSoundCueForms(newConfig);\n    } else if (newConfig && oldConfig) {\n        // update the dom\n        updateSoundCueForms(newConfig, oldConfig);\n    } else if (!newConfig && oldConfig) {\n        // tear down the forms\n        teardownSoundCueForms();\n    }\n};\n\n\nfunction setupSoundCueConfigForm(){\n    NodeCG.waitForReplicants(CommandConfig, CommandTypes, SoundCues)\n    .then(() => {\n        CommandConfig.on(ReplicantEvents.change, onSoundCommandConfigChange);\n    });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", setupSoundCueConfigForm);"],"names":["$c9667c13806cac9b$export$2e2bcd8739ae039","name","text","classes","button","document","createElement","length","classList","add","innerText","forName","label","htmlFor","value","input","type","options","select","forEach","opt","o","selected","span","id","div","form","$9f616eee726af400$export$501f6df0ab3ca018","SoundAlertReplicants","$ad119dc852be40ec$var$ReplicantEvents","$ad119dc852be40ec$export$2e2bcd8739ae039","$14bce57df13bef4b$export$1112fe37bc980be0","CSSClasses","$14bce57df13bef4b$export$d0ba48f9ed05b63c","$8fd10160d14e935e$var$CommandConfig","nodecg","Replicant","soundCueConfig","$8fd10160d14e935e$var$CommandTypes","soundCueTypes","$8fd10160d14e935e$var$SoundCues","soundCueList","$8fd10160d14e935e$var$onEnableButtonClicked","e","preventDefault","console","error","target","dataset","cmdName","foundCommand","find","c","commandName","enabled","$8fd10160d14e935e$var$buildFormGroup","extraClasses","formGroup","concat","buildDiv","undefined","$8fd10160d14e935e$var$mapCommandToForm","cmd","index","Error","log","JSON","stringify","rowDiv","buildForm","toString","newFormRow","commandFormRow","fg","middle","btn","txt","buildButton","btnToggleEnabled","onclick","$8fd10160d14e935e$var$buildEnableButton","appendChild","buildSpan","fieldName","buildLabel","append","coolDownMs","commandType","mappedCues","join","$8fd10160d14e935e$var$onSoundCommandConfigChange","newConfig","oldConfig","Array","isArray","config","mapPanel","getElementById","cueConfigPanel","rows","map","$8fd10160d14e935e$var$initializeSoundCueForms","addEventListener","NodeCG","waitForReplicants","then","on","change"],"version":3,"file":"index.288d68c3.js.map"}